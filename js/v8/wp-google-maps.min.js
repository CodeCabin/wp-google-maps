!function($){window.WPGMZA={maps:[],events:null,loadingHTML:'<div class="wpgmza-preloader"><div class="wpgmza-loader">...</div></div>',guid:function(){var d=(new Date).getTime();return"undefined"!=typeof performance&&"function"==typeof performance.now&&(d+=performance.now()),"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(c){var r=(d+16*Math.random())%16|0;return d=Math.floor(d/16),("x"===c?r:3&r|8).toString(16)})},hexOpacityToRGBA:function(colour,opacity){return hex=parseInt(colour.replace(/^#/,""),16),[(16711680&hex)>>16,(65280&hex)>>8,255&hex,parseFloat(opacity)]},latLngRegexp:/^(\-?\d+(\.\d+)?),\s*(\-?\d+(\.\d+)?)$/,isLatLngString:function(str){if("string"!=typeof str)return null;str.match(/^\(.+\)$/)&&(str=str.replace(/^\(|\)$/,""));var m=str.match(WPGMZA.latLngRegexp);return m?{lat:parseFloat(m[1]),lng:parseFloat(m[3])}:null},stringToLatLng:function(str){var result=WPGMZA.isLatLngString(str);if(!result)throw new Error("Not a valid latLng");return result},imageDimensionsCache:{},getImageDimensions:function(src,callback){if(WPGMZA.imageDimensionsCache[src])callback(WPGMZA.imageDimensionsCache[src]);else{var img=document.createElement("img");img.onload=function(event){var result={width:image.width,height:image.height};WPGMZA.imageDimensionsCache[src]=result,callback(result)},img.src=src}},isDeveloperMode:function(){return this.settings.developer_mode||window.Cookies&&window.Cookies.get("wpgmza-developer-mode")},isProVersion:function(){return this.is_pro_version},openMediaDialog:function(callback){var file_frame;if(file_frame)return file_frame.uploader.uploader.param("post_id",set_to_post_id),void file_frame.open();(file_frame=wp.media.frames.file_frame=wp.media({title:"Select a image to upload",button:{text:"Use this image"},multiple:!1})).on("select",function(){attachment=file_frame.state().get("selection").first().toJSON(),callback(attachment.id,attachment.url)}),file_frame.open()},getScrollAnimationOffset:function(){return WPGMZA.settings.scroll_animation_offset||0},animateScroll:function(element,milliseconds){var offset=WPGMZA.getScrollAnimationOffset();milliseconds||(milliseconds=WPGMZA.settings.scroll_animation_milliseconds?WPGMZA.settings.scroll_animation_milliseconds:500),$("html, body").animate({scrollTop:$(element).offset().top-offset},milliseconds)},getCurrentPosition:function(callback){if(navigator.geolocation){var options={enableHighAccuracy:!0};navigator.geolocation.getCurrentPosition(function(position){callback(position)},function(error){options.enableHighAccuracy=!1,navigator.geolocation.getCurrentPosition(function(position){callback(position)},function(error){console.warn(error.code,error.message)},options)},options)}else console.warn("No geolocation available on this device")},runCatchableTask:function(callback,friendlyErrorContainer){if(WPGMZA.isDeveloperMode())callback();else try{callback()}catch(e){var friendlyError=new WPGMZA.FriendlyError(e);$(friendlyErrorContainer).html(""),$(friendlyErrorContainer).append(friendlyError.element),$(friendlyErrorContainer).show()}},assertInstanceOf:function(instance,instanceName){var engine,fullInstanceName,pro=WPGMZA.isProVersion()?"Pro":"";switch(WPGMZA.settings.engine){case"google-maps":engine="Google";break;default:engine="OSM"}if(fullInstanceName=WPGMZA[engine+pro+instanceName]?engine+pro+instanceName:WPGMZA[pro+instanceName]?pro+instanceName:WPGMZA[engine+instanceName]?engine+instanceName:instanceName,!(instance instanceof WPGMZA[fullInstanceName]))throw new Error("Object must be an instance of "+fullInstanceName)},getMapByID:function(id){for(var i=0;i<WPGMZA.maps.length;i++)if(WPGMZA.maps[i].id==id)return WPGMZA.maps[i];return null}};for(var key in WPGMZA_localized_data)WPGMZA[key]=WPGMZA_localized_data[key];$(document).ready(function(event){$.fn.dataTable&&($.fn.dataTable.ext.errMode="throw"),$("script[src*='wp-google-maps.combined.js'], script[src*='wp-google-maps-pro.combined.js']").length&&console.warn("Minified script is out of date, using combined script instead.");var elements=$("script").filter(function(){return this.src.match(/(^|\/)jquery\.(min\.)?js(\?|$)/i)});if(elements.length>1&&console.warn("Multiple jQuery versions detected: ",elements),WPGMZA.isDeveloperMode()&&$("#wpgmza-map-edit-page form.wpgmza").show(),$(".wpgmza_copy_shortcode").on("click",function(){var temp=$("<input>"),temp2=$('<div id="wpgmza_tmp" style="display: none;" width:100%; text-align:center;"/>');$(document.body).append(temp),temp.val($(this).val()).select(),document.execCommand("copy"),temp.remove(),$(this).after(temp2),$(temp2).html($("[data-shortcode-copy-string]").attr("data-shortcode-copy-string")),$(temp2).fadeIn(),setTimeout(function(){$(temp2).fadeOut()},1e3),setTimeout(function(){$(temp2).remove()},1500)}),$("form.wpgmza").on("click",".switch label",function(event){var input=$(this).prev(".cmn-toggle");if(!input.prop("disabled")){var val=!input.prop("checked");input.prop("checked",val),val?input.attr("checked","checked"):input.removeAttr("checked"),input.trigger("change")}}),"https:"!=window.location.protocol){var warning='<span class="notice notice-warning">'+WPGMZA.localized_strings.unsecure_geolocation+"</span>";$(".wpgmza-geolocation-setting").after($(warning))}document.cookie="wpgmza_feedback_thanks=false; expires=Thu, 01 Jan 1970 00:00:01 GMT;"})}(jQuery),jQuery,WPGMZA.Distance={MILES:!0,KILOMETERS:!1,MILES_PER_KILOMETER:.621371,KILOMETERS_PER_MILE:1.60934,uiToMeters:function(uiDistance){return parseFloat(uiDistance)/(WPGMZA.settings.distance_units==WPGMZA.Distance.MILES?WPGMZA.Distance.MILES_PER_KILOMETER:1)*1e3},uiToKilometers:function(uiDistance){return.001*WPGMZA.Distance.uiToMeters(uiDistance)},uiToMiles:function(uiDistance){return WPGMZA.Distance.uiToKilometers(uiDistance)*WPGMZA.Distance.MILES_PER_KILOMETER},kilometersToUI:function(km){return WPGMZA.settings.distance_units==WPGMZA.Distance.MILES?km*WPGMZA.Distance.MILES_PER_KILOMETER:km}},jQuery,WPGMZA.EventDispatcher=function(){WPGMZA.assertInstanceOf(this,"EventDispatcher"),this._listenersByType=[]},WPGMZA.EventDispatcher.prototype.addEventListener=function(type,listener,thisObject,useCapture){var arr,types=type.split(/\s+/);if(types.length>1)for(var i=0;i<types.length;i++)this.addEventListener(types[i],listener,thisObject,useCapture);else{if(!(listener instanceof Function))throw new Error("Listener must be a function");(arr=this._listenersByType[type])||(arr=this._listenersByType[type]=[]);var obj={listener:listener,thisObject:thisObject||this,useCapture:!!useCapture};arr.push(obj)}},WPGMZA.EventDispatcher.prototype.on=WPGMZA.EventDispatcher.prototype.addEventListener,WPGMZA.EventDispatcher.prototype.removeEventListener=function(type,listener,thisObject,useCapture){var arr,obj;if(arr=this._listenersByType[type]){thisObject||(thisObject=this),useCapture=!!useCapture;for(var i=0;i<arr.length;i++)if((obj=arr[i]).listener==listener&&obj.thisObject==thisObject&&obj.useCapture==useCapture)return void arr.splice(i,1)}},WPGMZA.EventDispatcher.prototype.off=WPGMZA.EventDispatcher.prototype.removeEventListener,WPGMZA.EventDispatcher.prototype.hasEventListener=function(type){return!!_listenersByType[type]},WPGMZA.EventDispatcher.prototype.dispatchEvent=function(event){if(!(event instanceof WPGMZA.Event))if("string"==typeof event)event=new WPGMZA.Event(event);else{var src=event;event=new WPGMZA.Event;for(var name in src)event[name]=src[name]}event.target=this;for(var path=[],obj=this.parent;null!=obj;obj=obj.parent)path.unshift(obj);event.phase=WPGMZA.Event.CAPTURING_PHASE;for(var i=0;i<path.length&&!event._cancelled;i++)path[i]._triggerListeners(event);if(!event._cancelled)for(event.phase=WPGMZA.Event.AT_TARGET,this._triggerListeners(event),event.phase=WPGMZA.Event.BUBBLING_PHASE,i=path.length-1;i>=0&&!event._cancelled;i--)path[i]._triggerListeners(event)},WPGMZA.EventDispatcher.prototype.trigger=WPGMZA.EventDispatcher.prototype.dispatchEvent,WPGMZA.EventDispatcher.prototype._triggerListeners=function(event){var arr,obj;if(arr=this._listenersByType[event.type])for(var i=0;i<arr.length;i++)obj=arr[i],(event.phase!=WPGMZA.Event.CAPTURING_PHASE||obj.useCapture)&&obj.listener.call(arr[i].thisObject,event)},WPGMZA.events=new WPGMZA.EventDispatcher,function($){WPGMZA.DataTable=function(element,options){if(WPGMZA.EventDispatcher.call(this),!(element instanceof HTMLElement))throw new Error("First argument must be an instance of HTMLElement");if(!$(element).attr("data-ajax-action"))throw new Error("data-ajax-action attribute is missing");if(!$(element).attr("data-map-id"))throw new Error("data-map-id attribute is missing");this.element=element,this.ajaxAction=$(element).attr("data-ajax-action"),this.mapID=$(element).attr("data-map-id");var settings=this.getDataTableSettings();options&&$.extend(!0,settings,options),this.dataTable=$(element).DataTable(settings)},WPGMZA.DataTable.prototype=Object.create(WPGMZA.EventDispatcher.prototype),WPGMZA.DataTable.prototype.constructor=WPGMZA.DataTable,WPGMZA.DataTable.prototype.refresh=function(){$(this.element).DataTable().ajax.reload()},WPGMZA.DataTable.prototype.onAJAXRequest=function(data,settings){return $.extend(data,{action:this.ajaxAction,map_id:this.mapID}),data},WPGMZA.DataTable.prototype.onAJAXResponse=function(response){return this.lastResponseMeta=response.meta,response.data},WPGMZA.DataTable.prototype.onCreatedRow=function(row,data,index){var meta=this.lastResponseMeta[index];for(var name in meta)$(row).attr("data-"+name,meta[name]);this.trigger("rowcreated")},WPGMZA.DataTable.prototype.getDataTableSettings=function(){var self=this,columns=null;$(this.element).find("[data-column-key]").each(function(index,el){columns||(columns=[]),columns.push({data:$(el).attr("data-column-key")})});var languageURL,settings={processing:!0,serverSide:!0,ajax:{url:WPGMZA.ajaxurl,type:"POST",data:function(data,settings){return self.onAJAXRequest(data,settings)},dataSrc:function(response){return self.onAJAXResponse(response)}},createdRow:function(row,data,index){self.onCreatedRow(row,data,index)}};switch(WPGMZA.locale.substr(0,2)){case"af":languageURL="//cdn.datatables.net/plug-ins/1.10.16/i18n/Afrikaans.json";break;case"sq":languageURL="//cdn.datatables.net/plug-ins/1.10.16/i18n/Albanian.json";break;case"am":languageURL="//cdn.datatables.net/plug-ins/1.10.16/i18n/Amharic.json";break;case"ar":languageURL="//cdn.datatables.net/plug-ins/1.10.16/i18n/Arabic.json";break;case"hy":languageURL="//cdn.datatables.net/plug-ins/1.10.16/i18n/Armenian.json";break;case"az":languageURL="//cdn.datatables.net/plug-ins/1.10.16/i18n/Azerbaijan.json";break;case"bn":languageURL="//cdn.datatables.net/plug-ins/1.10.16/i18n/Bangla.json";break;case"eu":languageURL="//cdn.datatables.net/plug-ins/1.10.16/i18n/Basque.json";break;case"be":languageURL="//cdn.datatables.net/plug-ins/1.10.16/i18n/Belarusian.json";break;case"bg":languageURL="//cdn.datatables.net/plug-ins/1.10.16/i18n/Bulgarian.json";break;case"ca":languageURL="//cdn.datatables.net/plug-ins/1.10.16/i18n/Catalan.json";break;case"zh":languageURL="zh_TW"==WPGMZA.locale?"//cdn.datatables.net/plug-ins/1.10.16/i18n/Chinese-traditional.json":"//cdn.datatables.net/plug-ins/1.10.16/i18n/Chinese.json";break;case"hr":languageURL="//cdn.datatables.net/plug-ins/1.10.16/i18n/Croatian.json";break;case"cs":languageURL="//cdn.datatables.net/plug-ins/1.10.16/i18n/Czech.json";break;case"da":languageURL="//cdn.datatables.net/plug-ins/1.10.16/i18n/Danish.json";break;case"nl":languageURL="//cdn.datatables.net/plug-ins/1.10.16/i18n/Dutch.json";break;case"et":languageURL="//cdn.datatables.net/plug-ins/1.10.16/i18n/Estonian.json";break;case"fi":languageURL=WPGMZA.locale.match(/^fil/)?"//cdn.datatables.net/plug-ins/1.10.16/i18n/Filipino.json":"//cdn.datatables.net/plug-ins/1.10.16/i18n/Finnish.json";break;case"fr":languageURL="//cdn.datatables.net/plug-ins/1.10.16/i18n/French.json";break;case"gl":languageURL="//cdn.datatables.net/plug-ins/1.10.16/i18n/Galician.json";break;case"ka":languageURL="//cdn.datatables.net/plug-ins/1.10.16/i18n/Georgian.json";break;case"de":languageURL="//cdn.datatables.net/plug-ins/1.10.16/i18n/German.json";break;case"el":languageURL="//cdn.datatables.net/plug-ins/1.10.16/i18n/Greek.json";break;case"gu":languageURL="//cdn.datatables.net/plug-ins/1.10.16/i18n/Gujarati.json";break;case"he":languageURL="//cdn.datatables.net/plug-ins/1.10.16/i18n/Hebrew.json";break;case"hi":languageURL="//cdn.datatables.net/plug-ins/1.10.16/i18n/Hindi.json";break;case"hu":languageURL="//cdn.datatables.net/plug-ins/1.10.16/i18n/Hungarian.json";break;case"is":languageURL="//cdn.datatables.net/plug-ins/1.10.16/i18n/Icelandic.json";break;case"id":languageURL="//cdn.datatables.net/plug-ins/1.10.16/i18n/Indonesian.json";break;case"ga":languageURL="//cdn.datatables.net/plug-ins/1.10.16/i18n/Irish.json";break;case"it":languageURL="//cdn.datatables.net/plug-ins/1.10.16/i18n/Italian.json";break;case"ja":languageURL="//cdn.datatables.net/plug-ins/1.10.16/i18n/Japanese.json";break;case"kk":languageURL="//cdn.datatables.net/plug-ins/1.10.16/i18n/Kazakh.json";break;case"ko":languageURL="//cdn.datatables.net/plug-ins/1.10.16/i18n/Korean.json";break;case"ky":languageURL="//cdn.datatables.net/plug-ins/1.10.16/i18n/Kyrgyz.json";break;case"lv":languageURL="//cdn.datatables.net/plug-ins/1.10.16/i18n/Latvian.json";break;case"lt":languageURL="//cdn.datatables.net/plug-ins/1.10.16/i18n/Lithuanian.json";break;case"mk":languageURL="//cdn.datatables.net/plug-ins/1.10.16/i18n/Macedonian.json";break;case"ml":languageURL="//cdn.datatables.net/plug-ins/1.10.16/i18n/Malay.json";break;case"mn":languageURL="//cdn.datatables.net/plug-ins/1.10.16/i18n/Mongolian.json";break;case"ne":languageURL="//cdn.datatables.net/plug-ins/1.10.16/i18n/Nepali.json";break;case"nb":languageURL="//cdn.datatables.net/plug-ins/1.10.16/i18n/Norwegian-Bokmal.json";break;case"nn":languageURL="//cdn.datatables.net/plug-ins/1.10.16/i18n/Norwegian-Nynorsk.json";break;case"ps":languageURL="//cdn.datatables.net/plug-ins/1.10.16/i18n/Pashto.json";break;case"fa":languageURL="//cdn.datatables.net/plug-ins/1.10.16/i18n/Persian.json";break;case"pl":languageURL="//cdn.datatables.net/plug-ins/1.10.16/i18n/Polish.json";break;case"pt":languageURL="pt_BR"==WPGMZA.locale?"//cdn.datatables.net/plug-ins/1.10.16/i18n/Portuguese-Brasil.json":"//cdn.datatables.net/plug-ins/1.10.16/i18n/Portuguese.json";break;case"ro":languageURL="//cdn.datatables.net/plug-ins/1.10.16/i18n/Romanian.json";break;case"ru":languageURL="//cdn.datatables.net/plug-ins/1.10.16/i18n/Russian.json";break;case"sr":languageURL="//cdn.datatables.net/plug-ins/1.10.16/i18n/Serbian.json";break;case"si":languageURL="//cdn.datatables.net/plug-ins/1.10.16/i18n/Sinhala.json";break;case"sk":languageURL="//cdn.datatables.net/plug-ins/1.10.16/i18n/Slovak.json";break;case"sl":languageURL="//cdn.datatables.net/plug-ins/1.10.16/i18n/Slovenian.json";break;case"es":languageURL="//cdn.datatables.net/plug-ins/1.10.16/i18n/Spanish.json";break;case"sw":languageURL="//cdn.datatables.net/plug-ins/1.10.16/i18n/Swahili.json";break;case"sv":languageURL="//cdn.datatables.net/plug-ins/1.10.16/i18n/Swedish.json";break;case"ta":languageURL="//cdn.datatables.net/plug-ins/1.10.16/i18n/Tamil.json";break;case"te":languageURL="//cdn.datatables.net/plug-ins/1.10.16/i18n/telugu.json";break;case"th":languageURL="//cdn.datatables.net/plug-ins/1.10.16/i18n/Thai.json";break;case"tr":languageURL="//cdn.datatables.net/plug-ins/1.10.16/i18n/Turkish.json";break;case"uk":languageURL="//cdn.datatables.net/plug-ins/1.10.16/i18n/Ukrainian.json";break;case"ur":languageURL="//cdn.datatables.net/plug-ins/1.10.16/i18n/Urdu.json";break;case"uz":languageURL="//cdn.datatables.net/plug-ins/1.10.16/i18n/Uzbek.json";break;case"vi":languageURL="//cdn.datatables.net/plug-ins/1.10.16/i18n/Vietnamese.json";break;case"cy":languageURL="//cdn.datatables.net/plug-ins/1.10.16/i18n/Welsh.json"}return languageURL&&(settings.language={url:languageURL}),settings}}(jQuery),function($){WPGMZA.AdminTable=function(element,settings){WPGMZA.DataTable.call(this,element,settings);this.settings={},$.extend(this.settings,settings),this.objectType=$(element).attr("data-object-type"),this.capitalizedSingularObjectType=this.objectType.charAt(0).toUpperCase()+this.objectType.slice(1).replace(/s$/,""),this.markerDragNoticeIssued=!1,element.adminTable=this},WPGMZA.AdminTable.prototype=Object.create(WPGMZA.DataTable.prototype),WPGMZA.AdminTable.prototype.constructor=WPGMZA.AdminTable,WPGMZA.AdminTable.prototype.getDataTableSettings=function(){var self=this,settings=WPGMZA.DataTable.prototype.getDataTableSettings.call(this);return settings.initComplete=function(settings,json){self.onInitComplete(settings,json)},settings},WPGMZA.AdminTable.prototype.onInitComplete=function(settings,json){var self=this,element=this.element;$(element).find("thead>tr, tfoot>tr").prepend("<th>Mark</th>"),$(element).find("thead>tr, tfoot>tr").append("<th>Actions</th>"),$(element).on("click","button[data-action]",function(event){var action=$(event.currentTarget).attr("data-action"),actionFunctionName=action+self.capitalizedSingularObjectType,objectID=$(event.target).closest("[data-id]").attr("data-id");if($(event.currentTarget).hasClass("wpgmza-edit-marker-location")&&!self.markerDragNoticeIssued){var timeout=parseInt(WPGMZA.settings.scroll_animation_milliseconds||400);setTimeout(function(){$(".wpgmza-engine-map").after("<p class='notice notice-info animated bounce'>\t\t\t\t\t\t"+WPGMZA.localized_strings.marker_drag_notice+"\t\t\t\t\t</p>")},timeout),self.markerDragNoticeIssued=!0}switch(action){case"edit":var getFunctionName="get"+self.capitalizedSingularObjectType+"ByID",object=WPGMZA.mapEditPage.map[getFunctionName](objectID);WPGMZA.mapEditPage[actionFunctionName](object),WPGMZA.mapEditPage.map.setZoom(16),WPGMZA.animateScroll($("#map-edit-tabs"));break;case"delete":actionFunctionName+="ByID",WPGMZA.mapEditPage[actionFunctionName](objectID),self.refresh()}}),$(element).after('<div class="wpgmza-bulk-buttons">&#x21b3;<button type="button" class="button button-primary select-all">Select All</button><button type="button" class="button button-primary bulk-delete">Bulk Delete</button></div>');var buttons=$(element).next(".wpgmza-bulk-buttons");buttons.find(".select-all").on("click",function(event){$(element).find("input[type='checkbox'].mark").prop("checked","true")});var deleteFunctionName="delete"+this.capitalizedSingularObjectType+"ByID";buttons.find(".bulk-delete").on("click",function(event){$(element).find("input[data-mark-id]:checked").each(function(index,el){var objectID=parseInt($(el).attr("data-mark-id"));WPGMZA.mapEditPage[deleteFunctionName](objectID)}),self.refresh()})},WPGMZA.AdminTable.prototype.onCreatedRow=function(row,data,index){WPGMZA.DataTable.prototype.onCreatedRow.call(this,row,data,index);var td=$('<td class="wpgmza-actions"/>'),meta=this.lastResponseMeta[index];$(row).prepend($("<td><input type='checkbox' class='mark' data-mark-id='"+meta.id+"'/></td>")),$(td).append("<button data-action='edit' type='button' class='button button-primary wpgmza-edit'><i class='fa fa-pencil-square-o' aria-hidden='true'></i></button>"),$(td).append(" "),"markers"==this.objectType&&($(td).append("<button data-action='edit' type='button' class='button button-primary wpgmza-edit wpgmza-edit-marker-location'><i class='fa fa-map-marker' aria-hidden='true'></i></button>"),$(td).append(" ")),$(td).append("<button data-action='delete' type='button' class='button button-primary wpgmza-delete'><i class='fa fa-trash-o' aria-hidden='true'></i></button>"),"markers"==this.objectType&&($(td).find(".wpgmza-edit").attr("title",WPGMZA.localized_strings.edit_this_marker),$(td).find(".wpgmza-edit-marker-location").attr("title",WPGMZA.localized_strings.edit_this_marker_location),$(td).find(".wpgmza-delete").attr("title",WPGMZA.localized_strings.delete_this_marker)),$(row).append(td),this.trigger({type:"admintable.rowcreated",row:row,data:data,index:index,meta:meta})},WPGMZA.AdminTable.prototype.onAJAXRequest=function(data,settings){return WPGMZA.DataTable.prototype.onAJAXRequest.call(this,data,settings),WPGMZA.mapEditPage?($.extend(data,{exclude_ids:WPGMZA.mapEditPage.deleteIDs[this.objectType].join(",")}),data):data}}(jQuery),jQuery,WPGMZA.DrawingManager=function(map){WPGMZA.assertInstanceOf(this,"DrawingManager"),WPGMZA.EventDispatcher.call(this),this.map=map,this.mode=WPGMZA.DrawingManager.MODE_NONE},WPGMZA.DrawingManager.prototype=Object.create(WPGMZA.EventDispatcher.prototype),WPGMZA.DrawingManager.prototype.constructor=WPGMZA.DrawingManager,WPGMZA.DrawingManager.MODE_NONE=null,WPGMZA.DrawingManager.MODE_MARKER="marker",WPGMZA.DrawingManager.MODE_POLYGON="polygon",WPGMZA.DrawingManager.MODE_POLYLINE="polyline",WPGMZA.DrawingManager.getConstructor=function(){switch(WPGMZA.settings.engine){case"google-maps":return WPGMZA.GoogleDrawingManager;default:return WPGMZA.OSMDrawingManager}},WPGMZA.DrawingManager.createInstance=function(map){return new(WPGMZA.DrawingManager.getConstructor())(map)},WPGMZA.DrawingManager.prototype.setDrawingMode=function(mode){this.mode=mode},jQuery,WPGMZA.Event=function(options){if("string"==typeof options&&(this.type=options),this.bubbles=!0,this.cancelable=!0,this.phase=WPGMZA.Event.PHASE_CAPTURE,this.target=null,this._cancelled=!1,"object"==typeof options)for(var name in options)this[name]=options[name]},WPGMZA.Event.CAPTURING_PHASE=0,WPGMZA.Event.AT_TARGET=1,WPGMZA.Event.BUBBLING_PHASE=2,WPGMZA.Event.prototype.stopPropagation=function(){this._cancelled=!0},function($){var template='\t\t<div class="notice notice-error"> \t\t\t<p> \t\t\t'+WPGMZA.localized_strings.friendly_error+' \t\t\t</p> \t\t\t<pre style="white-space: pre-line;"></pre> \t\t<div> \t\t';WPGMZA.FriendlyError=function(nativeError){if(!WPGMZA.is_admin)return this.element=$(WPGMZA.preloaderHTML),void $(this.element).removeClass("animated");$("#wpgmza-map-edit-page>.wpgmza-preloader").remove(),this.element=$(template),this.element.find("pre").html(nativeError.message+"\r\n"+nativeError.stack+"\r\n\r\n on "+window.location.href)}}(jQuery),jQuery,WPGMZA.Geocoder=function(){WPGMZA.assertInstanceOf(this,"Geocoder")},WPGMZA.Geocoder.getConstructor=function(){switch(WPGMZA.settings.engine){case"google-maps":return WPGMZA.GoogleGeocoder;default:return WPGMZA.OSMGeocoder}},WPGMZA.Geocoder.createInstance=function(){return new(WPGMZA.Geocoder.getConstructor())},WPGMZA.Geocoder.prototype.getLatLngFromAddress=function(options,callback){if(WPGMZA.isLatLngString(options.address)){var parts=options.address.split(/,\s*/);callback({lat:parseFloat(parts[0]),lng:parseFloat(parts[1])})}},jQuery,WPGMZA.InfoWindow=function(mapObject){var self=this;WPGMZA.EventDispatcher.call(this),WPGMZA.assertInstanceOf(this,"InfoWindow"),this.mapObject=mapObject,mapObject.map?setTimeout(function(){self.onMapObjectAdded(event)},100):mapObject.addEventListener("added",function(event){self.onMapObjectAdded(event)})},WPGMZA.InfoWindow.prototype=Object.create(WPGMZA.EventDispatcher.prototype),WPGMZA.InfoWindow.prototype.constructor=WPGMZA.InfoWindow,WPGMZA.InfoWindow.OPEN_BY_CLICK=1,WPGMZA.InfoWindow.OPEN_BY_HOVER=2,WPGMZA.InfoWindow.getConstructor=function(){switch(WPGMZA.settings.engine){case"google-maps":return WPGMZA.isProVersion()?WPGMZA.GoogleProInfoWindow:WPGMZA.GoogleInfoWindow;default:return WPGMZA.isProVersion()?WPGMZA.OSMProInfoWindow:WPGMZA.OSMInfoWindow}},WPGMZA.InfoWindow.createInstance=function(mapObject){return new(this.getConstructor())(mapObject)},WPGMZA.InfoWindow.prototype.getContent=function(callback){var html="";this.mapObject instanceof WPGMZA.Marker&&(html=this.mapObject.address),callback(html)},WPGMZA.InfoWindow.prototype.open=function(event){return!WPGMZA.settings.disable_infowindows},WPGMZA.InfoWindow.prototype.close=function(){},WPGMZA.InfoWindow.prototype.onMapObjectAdded=function(){1==this.mapObject.settings.infoopen&&this.open()},jQuery,WPGMZA.MapObject=function(row){if(WPGMZA.assertInstanceOf(this,"MapObject"),WPGMZA.EventDispatcher.call(this),this.id=-1,this.guid=WPGMZA.guid(),this.modified=!0,this.settings={},row)for(var name in row)if("settings"==name){if(null==row.settings)this.settings={};else switch(typeof row.settings){case"string":this.settings=JSON.parse(row[name]);break;case"object":this.settings=row[name];break;default:throw new Error("Don't know how to interpret settings")}for(var name in this.settings){var value=this.settings[name];String(value).match(/^-?\d+$/)&&(this.settings[name]=parseInt(value))}}else this[name]=row[name]},WPGMZA.MapObject.prototype=Object.create(WPGMZA.EventDispatcher.prototype),WPGMZA.MapObject.prototype.constructor=WPGMZA.MapObject,WPGMZA.MapObject.prototype.parseGeometry=function(string){var pairs,coords,results=[];pairs=string.replace(/[^ ,\d\.\-+e]/g,"").split(",");for(var i=0;i<pairs.length;i++)coords=pairs[i].split(" "),results.push({lat:parseFloat(coords[1]),lng:parseFloat(coords[0])});return results},WPGMZA.MapObject.prototype.toJSON=function(){return{id:this.id,guid:this.guid,settings:this.settings}},function($){function empty(name){return!self[name]||!self[name].length}WPGMZA.MapSettings=function(element){var str=element.getAttribute("data-settings"),json=JSON.parse(str);WPGMZA.assertInstanceOf(this,"MapSettings");for(var key in json){var value=json[key];String(value).match(/^-?\d+$/)&&(value=parseInt(value)),this[key]=value}},WPGMZA.MapSettings.prototype.toOSMViewOptions=function(){var options={center:ol.proj.fromLonLat([-119.4179,36.7783]),zoom:4};if("string"==typeof this.start_location){var coords=this.start_location.replace(/^\(|\)$/g,"").split(",");WPGMZA.isLatLngString(this.start_location)?options.center=ol.proj.fromLonLat([parseFloat(coords[1]),parseFloat(coords[0])]):console.warn("Invalid start location")}return this.start_zoom&&(options.zoom=parseInt(this.start_zoom)),empty("min_zoom")||(options.minZoom=parseInt(this.min_zoom)),empty("max_zoom")||(options.maxZoom=parseInt(this.max_zoom)),options},WPGMZA.MapSettings.prototype.toGoogleMapsOptions=function(){function formatCoord(coord){return $.isNumeric(coord)?coord:parseFloat(String(coord).replace(/[\(\)\s]/,""))}var latLngCoords=this.start_location&&this.start_location.length?this.start_location.split(","):[36.7783,-119.4179],latLng=new google.maps.LatLng(formatCoord(latLngCoords[0]),formatCoord(latLngCoords[1])),options={zoom:this.start_zoom?parseInt(this.start_zoom):4,center:latLng};switch(empty("min_zoom")||(options.minZoom=parseInt(this.min_zoom)),empty("max_zoom")||(options.maxZoom=parseInt(this.max_zoom)),options.zoomControl=!(1==this.map_zoom),options.panControl=!(1==this.map_pan),options.mapTypeControl=!(1==this.disable_map_type_controls),options.streetViewControl=!(1==this.map_streetview),options.fullscreenControl=!(1==this.map_full_screen_control),options.draggable=!(1==this.map_draggable),options.disableDoubleClickZoom=!(1==this.map_clickzoom),options.scrollwheel=!(1==this.map_scroll),this.force_greedy_gestures&&(options.gestureHandling="greedy"),parseInt(this.map_type)){case 2:options.mapTypeId=google.maps.MapTypeId.SATELLITE;break;case 3:options.mapTypeId=google.maps.MapTypeId.HYBRID;break;case 4:options.mapTypeId=google.maps.MapTypeId.TERRAIN;break;default:options.mapTypeId=google.maps.MapTypeId.ROADMAP}if(this.theme_data&&this.theme_data.length>0)try{options.styles=JSON.parse(this.theme_data)}catch(e){alert("Your theme data is not valid JSON and has been ignored")}return options}}(jQuery),function($){function deg2rad(deg){return deg*(Math.PI/180)}WPGMZA.Map=function(element){var self=this;if(WPGMZA.assertInstanceOf(this,"Map"),WPGMZA.EventDispatcher.call(this),!(element instanceof HTMLElement))throw new Error("Argument must be a HTMLElement");if(this.id=element.getAttribute("data-map-id"),!/\d+/.test(this.id))throw new Error("Map ID must be an integer");WPGMZA.maps.push(this),this.element=element,this.element.wpgmzaMap=this,this.engineElement=$(this.element).find(".wpgmza-engine-map")[0],this.loader=$(element).find(".wpgmza-loader"),$(this.loader).show(),jQuery.fn.jquery.match(/1\.([0-7])\.([0-9])/)?$(this.element).find("#wpgmza-jquery-error").removeClass("is-hidden"):$(this.element).find("#wpgmza-jquery-error").removeClass("is-hidden").remove(),this.markers=[],this.polygons=[],this.polylines=[];var data;this.shortcodeAttributes={},(data=$(this.element).attr("data-shortcode-attributes"))&&(this.shortcodeAttributes=JSON.parse(data)),this.queryStringVariables={};for(var vars=window.location.search.substring(1).split("&"),i=0;i<vars.length;i++){var pair=vars[i].split("=");this.queryStringVariables[pair[0]]=decodeURIComponent(pair[1])}this.excludeIDs={markers:[],polygons:[],polylines:[]},this.sessionID=WPGMZA.guid(),this.ajaxTimeoutID=null,this.pendingFetchRequests=0,this.completedFetchRequests=0,this.loadSettings(),this.settings.store_locator_enabled&&(this.storeLocator=WPGMZA.StoreLocator.createInstance(this)),this.markerLabelOrder=this.decodeIDs($(element).attr("data-marker-id-ranges")),this.settings.general_layout&&$(element).addClass(this.settings.general_layout),this.settings.layout&&this.settings.layout.length&&(layout=JSON.parse(this.settings.layout),this.setLayout(layout));var width,height,prevWidth,prevHeight;setInterval(function(){width=$(self.engineElement).width(),height=$(self.engineElement).height(),width==prevWidth&&height==prevHeight||(prevWidth=width,prevHeight=height,self.onElementResized())},1e3),$(element).find(".wpgmza-load-failed").removeClass("is-hidden").remove(),$(this.loader).hide();var engineMapElement=$(this.element).find(".wpgmza-engine-map");0==engineMapElement.height()&&this.settings.height.match(/%$/)&&engineMapElement.after("<div class='notice notice-error'>"+WPGMZA.localized_strings.zero_height_warning+"</div>"),$(document.body).on("click","[mid][mapid], [data-wpgmza-marker-id][data-wpgmza-map-id]",function(event){self.onMarkerLinkClicked(event)}),this.highPerformanceMode="low-bandwidth"!=WPGMZA.settings.data_transmission_mode,this.highPerformanceMode&&this.on("created",function(event){var mapObjectData=$(element).attr("data-map-object-data");mapObjectData=JSON.parse(mapObjectData),self.onFetchComplete(mapObjectData)}),this.idleUserInteractionFlag=!1;try{this.centerOnIdle=WPGMZA.stringToLatLng(this.settings.start_location)}catch(e){this.centerOnIdle={lat:36.7783,lng:-119.4179}}this.on("zoomchanged dragend",function(event){self.onUserInteractionEnd(event)}),$(document.body).on("infowindowopen",function(event){self.onUserInteractionEnd(event)}),$(this.element).find(".wpgmza-preloader-hide-css").remove()},WPGMZA.Map.prototype=Object.create(WPGMZA.EventDispatcher.prototype),WPGMZA.Map.prototype.constructor=WPGMZA.Map,WPGMZA.Map.getConstructor=function(){switch(WPGMZA.settings.engine){case"google-maps":return WPGMZA.isProVersion()?WPGMZA.GoogleProMap:WPGMZA.GoogleMap;default:return WPGMZA.isProVersion()?WPGMZA.OSMProMap:WPGMZA.OSMMap}},WPGMZA.Map.createInstance=function(element){return new(WPGMZA.Map.getConstructor())(element)},WPGMZA.Map.ALIGN_LEFT=1,WPGMZA.Map.ALIGN_CENTER=2,WPGMZA.Map.ALIGN_RIGHT=3,WPGMZA.Map.ALIGN_NONE=4,WPGMZA.Map.prototype.loadSettings=function(){var settings=new WPGMZA.MapSettings(this.element);this.settings=$.extend({},WPGMZA.settings,settings),this.settings.width||(this.settings.width="100%"),this.settings.height||(this.settings.height="400px"),this.setDimensions(this.settings.width,this.settings.height),this.setAlignment(this.settings.map_align)},WPGMZA.Map.prototype.getMapObjectArrays=function(){return{markers:this.markers,polygons:this.polygons,polylines:this.polylines}},WPGMZA.Map.prototype.getObjectByGUID=function(guid){var arrays=this.getMapObjectArrays();for(var name in arrays)for(var arr=arrays[name],i=0;i<arr.length;i++)if(arr[i].guid==guid)return arr[i];return null},WPGMZA.Map.prototype.decodeIDs=function(ids){for(var ranges=ids.split(","),result=[],i=0;i<ranges.length;i++){var parts=ranges[i].split("-");if(1==parts.length)result.push(parseInt(parts[0],36));else for(var end=parseInt(parts[1],36),j=parseInt(parts[0],36);j<=end;j++)result.push(j)}return result},WPGMZA.Map.prototype.onBoundsChanged=function(){if(!this.highPerformanceMode&&!this.allMarkersFetched){var self=this;null!=this.ajaxTimeoutID&&clearTimeout(this.ajaxTimeoutID),this.ajaxTimeoutID=setTimeout(function(){self.fetch()},500)}this.dispatchEvent({type:"boundschanged"})},WPGMZA.Map.prototype.addMarker=function(marker){if(!(marker instanceof WPGMZA.Marker))throw new Error("Argument must be an instance of WPGMZA.Marker");marker.map=this,marker.parent=this,this.markers.push(marker),this.dispatchEvent({type:"markeradded",marker:marker}),marker.dispatchEvent({type:"added"})},WPGMZA.Map.prototype.deleteMarker=function(marker){if(!(marker instanceof WPGMZA.Marker))throw new Error("Argument must be an instance of WPGMZA.Marker");if(marker.map!==this)throw new Error("Wrong map error");marker.map=null,marker.parent=null,this.markers.splice(this.markers.indexOf(marker),1),this.dispatchEvent({type:"markerremoved",marker:marker}),marker.dispatchEvent({type:"removed"})},WPGMZA.Map.prototype.getMarkerByID=function(id){for(var i=0;i<this.markers.length;i++)if(this.markers[i].id==id)return this.markers[i];return null},WPGMZA.Map.prototype.deleteMarkerByID=function(id){var marker=this.getMarkerByID(id);marker&&this.deleteMarker(marker)},WPGMZA.Map.prototype.addPolygon=function(polygon){if(!(polygon instanceof WPGMZA.Polygon))throw new Error("Argument must be an instance of WPGMZA.Polygon");polygon.map=this,this.polygons.push(polygon),this.dispatchEvent({type:"polygonadded",polygon:polygon})},WPGMZA.Map.prototype.deletePolygon=function(polygon){if(!(polygon instanceof WPGMZA.Polygon))throw new Error("Argument must be an instance of WPGMZA.Polygon");if(polygon.map!==this)throw new Error("Wrong map error");polygon.map=null,this.polygons.splice(this.polygons.indexOf(polygon),1),this.dispatchEvent({type:"polygonremoved",polygon:polygon})},WPGMZA.Map.prototype.getPolygonByID=function(id){for(var i=0;i<this.polygons.length;i++)if(this.polygons[i].id==id)return this.polygons[i];return null},WPGMZA.Map.prototype.deletePolygonByID=function(id){var polygon=this.getPolygonByID(id);polygon&&this.deletePolygon(polygon)},WPGMZA.Map.prototype.getPolylineByID=function(id){for(var i=0;i<this.polylines.length;i++)if(this.polylines[i].id==id)return this.polylines[i];return null},WPGMZA.Map.prototype.addPolyline=function(polyline){if(!(polyline instanceof WPGMZA.Polyline))throw new Error("Argument must be an instance of WPGMZA.Polyline");polyline.map=this,this.polylines.push(polyline),this.dispatchEvent({type:"polylineadded",polyline:polyline})},WPGMZA.Map.prototype.deletePolyline=function(polyline){if(!(polyline instanceof WPGMZA.Polyline))throw new Error("Argument must be an instance of WPGMZA.Polyline");if(polyline.map!==this)throw new Error("Wrong map error");polyline.map=null,this.polylines.splice(this.polylines.indexOf(polyline),1),this.dispatchEvent({type:"polylineremoved",polyline:polyline})},WPGMZA.Map.prototype.getPolylineByID=function(id){for(var i=0;i<this.polylines.length;i++)if(this.polylines[i].id==id)return this.polylines[i];return null},WPGMZA.Map.prototype.deletePolylineByID=function(id){var polyline=this.getPolylineByID(id);polyline&&this.deletePolyline(polyline)};Math.PI;WPGMZA.Map.getGeographicDistance=function(lat1,lon1,lat2,lon2){var dLat=deg2rad(lat2-lat1),dLon=deg2rad(lon2-lon1),a=Math.sin(dLat/2)*Math.sin(dLat/2)+Math.cos(deg2rad(lat1))*Math.cos(deg2rad(lat2))*Math.sin(dLon/2)*Math.sin(dLon/2);return 6371*(2*Math.atan2(Math.sqrt(a),Math.sqrt(1-a)))},WPGMZA.Map.prototype.setCenter=function(latLng){if(this.idleUserInteractionFlag=!0,!("lat"in latLng&&"lng"in latLng))throw new Error("Argument is not an object with lat and lng")},WPGMZA.Map.prototype.getClosestMarker=function(lat,lng){var dist,closestIndex,dx,dy,position,closestDistance=1/0,x1=lng,y1=lat,count=this.markers.length;if(0==count)return null;for(var i=0;i<count;i++)dx=(position=this.markers[i].getPosition()).lng-x1,dy=position.lat-y1,(dist=Math.sqrt(dx*dx+dy*dy))<closestDistance&&(closestDistance=dist,closestIndex=i);return this.markers[closestIndex]},WPGMZA.Map.prototype.getFetchParameters=function(){return{map_id:this.id,action:"wpgmza_map_fetch",sid:this.sessionID}},WPGMZA.Map.prototype.fetch=function(){var self=this,data=this.getFetchParameters();this.highPerformanceMode||this.allMarkersFetched||(this.pendingFetchRequests++,$(this.loader).show(),$.ajax(WPGMZA.ajaxurl,{data:data,complete:function(){0==--self.pendingFetchRequests&&$(self.loader).hide()},success:function(response){var json;json="string"==typeof response?JSON.parse(response):response,self.onFetchComplete(json)},error:function(xhr,status,error){self.dispatchEvent({type:"fetcherror",map:self,xhr:xhr,status:status,error:error}),console.warn("Error fetching map objects :- "+error)}}))},WPGMZA.Map.prototype.onFetchComplete=function(json){var addedMarkers=[];if(this.completedFetchRequests++,null==json.markers)this.allMarkersFetched=!0;else for(var i=0;i<json.markers.length;i++)if(!this.excludeIDs.markers[json.markers[i].id]){var marker=WPGMZA.Marker.createInstance(json.markers[i]);marker.modified=!1,this.addMarker(marker),addedMarkers.push(marker)}for(i=0;i<json.polygons.length;i++)if(!this.excludeIDs.polygons[json.polygons[i].id]){var polygon=WPGMZA.Polygon.createInstance(json.polygons[i]);polygon.modified=!1,this.addPolygon(polygon)}for(i=0;i<json.polylines.length;i++)if(!this.excludeIDs.polylines[json.polylines[i].id]){var polyline=WPGMZA.Polyline.createInstance(json.polylines[i]);polyline.modified=!1,this.addPolyline(polyline)}this.dispatchEvent({type:"fetchsuccess",markers:addedMarkers})},WPGMZA.Map.prototype.setDimensions=function(width,height){$(this.element).css({width:width}),$(this.engineElement).css({width:"100%",height:height})},WPGMZA.Map.prototype.setAlignment=function(align){var css;switch(align){case WPGMZA.Map.ALIGN_LEFT:css={float:"left"};break;case WPGMZA.Map.ALIGN_CENTER:css={"margin-left":"auto","margin-right":"auto",float:"none"};break;case WPGMZA.Map.ALIGN_RIGHT:css={float:"right"};break;default:css={float:"none"}}css&&$(this.element).css(css)},WPGMZA.Map.prototype.setLayout=function(layout,target){var element;element=target||this.element;for(i=0;i<layout.order.length;i++){var name=layout.order[i];(layoutElement=$(element).find("[data-wpgmza-layout-element='"+name+"']")).length&&$(element).append(layoutElement)}for(var position in layout.grid){var container=$(element).find(".wpgmza-in-map-grid [data-grid-position='"+position+"']"),layoutElement=$(element).find("[data-wpgmza-layout-element='"+layout.grid[position]+"']");layoutElement.length?$(container).append(layoutElement):console.warn("Element '"+name+"' not found for layout")}for(var nonLayoutElements=$(element).children(":not([data-wpgmza-layout-element])"),i=0;i<nonLayoutElements.length;i++)$(element).append(nonLayoutElements[i])},WPGMZA.Map.prototype.onMarkerLinkClicked=function(event){var marker_id=event.target.hasAttribute("data-wpgmza-marker-id")?$(event.target).attr("data-wpgmza-marker-id"):$(event.target).attr("mid"),map_id=event.target.hasAttribute("data-wpgmza-map-id")?$(event.target).attr("data-wpgmza-map-id"):$(event.target).attr("mapid"),zoom=event.target.hasAttribute("data-zoom")?$(event.target).attr("data-zoom"):null;if(map_id==this.id){var marker=this.getMarkerByID(marker_id);marker?(this.panTo(marker.getPosition()),marker.openInfoWindow(),marker.trigger("select"),zoom&&this.setZoom(zoom),WPGMZA.animateScroll(this.element)):console.warn("Marker not found on map")}},WPGMZA.Map.prototype.nudge=function(x,y){var pixels=this.latLngToPixels(this.getCenter());if(pixels.x+=parseFloat(x),pixels.y+=parseFloat(y),isNaN(pixels.x)||isNaN(pixels.y))throw new Error("Invalid coordinates supplied");var latLng=this.pixelsToLatLng(pixels);this.setCenter(latLng)},WPGMZA.Map.prototype.onUserInteractionEnd=function(event){this.getCenter();this.idleUserInteractionFlag=!0},WPGMZA.Map.prototype.onIdle=function(event){this.getCenter();this.idleUserInteractionFlag?this.centerOnIdle=this.getCenter():this.setCenter(this.centerOnIdle),this.idleUserInteractionFlag=!1},WPGMZA.Map.prototype.onWindowResize=function(event){},WPGMZA.Map.prototype.onElementResized=function(event){},$(document).ready(function(){function createMaps(){$(".wpgmza-map").each(function(index,el){el.wpgmzaMap||WPGMZA.runCatchableTask(function(){WPGMZA.Map.createInstance(el)},el)})}createMaps(),setInterval(createMaps,1e3)})}(jQuery),function($){WPGMZA.MapEditPage=function(){function onPreviewMode(event){$("input[name='preview_mode']").prop("checked")?$("#wpgmza-map-edit-page").addClass("wpgmza-preview-front-end"):$("#wpgmza-map-edit-page").removeClass("wpgmza-preview-front-end")}function placeRightClickMarker(event){self.onRightClickMap(event)}function onLockStartViewport(event){var locked=$("input[name='lock_start_viewport']").prop("checked");$("input[name='start_location'], input[name='start_zoom']").prop("disabled",locked),$("button#view-locked-viewport").prop("disabled",!locked)}var self=this;WPGMZA.assertInstanceOf(this,"MapEditPage"),this.map=null,this.rightClickCursor=null,this.editMapObjectTarget=null,this.drawingManager=null,this.onFetchEditMarkerID=null,this.unloadListenerBound=!1,this.initialBoundsChanged=!0,this.deleteIDs={markers:[],polygons:[],polylines:[]},$(".wpgmza-tabs").each(function(index,el){var options={},active=0;window.sessionStorage&&(active=parseInt(sessionStorage.getItem(el.id))),options={active:active,beforeActivate:function(event,ui){self.finishEditingMapObject()},activate:function(event,ui){self.onMapPanelTabActivated(event,ui)}},$(el).tabs(options)});active=0;window.sessionStorage&&(active=parseInt(sessionStorage.getItem("wpgmza-map-edit-page-accordion"))),$(".wpgmza-accordion").accordion({heightStyle:"content",autoHeight:!1,clearStyle:!0,collapsible:!0,active:active,activate:function(event,ui){window.sessionStorage&&sessionStorage.setItem("wpgmza-map-edit-page-accordion",$(event.target).accordion("option","active"))}}),$("#zoom-level-slider").slider({min:1,max:21,value:$("input[name='start_zoom']").val(),slide:function(event,ui){$("input[name='start_zoom']").val(ui.value),self.map.setZoom(ui.value)}}),$("#themes input[type='radio']").on("change",function(event){var str=$(this).attr("data-theme-json");json=JSON.parse(str),str=JSON.stringify(json,void 0,4),$("textarea[name='theme_data']").val(str),self.applyThemeData()}),$("#preview-custom-theme").on("click",function(event){$("#themes input[type='radio']").prop("checked",!1),self.applyThemeData()}),$("input[name='preview_mode']").on("change",onPreviewMode),onPreviewMode(),this.map=WPGMZA.maps[0],self.map.markers.forEach(function(marker){self.onMarkerAdded({marker:marker})}),self.map.polygons.forEach(function(polygon){self.onPolygonAdded({polygon:polygon})}),self.map.polylines.forEach(function(polyline){self.onPolylineAdded({polyline:polyline})}),this.map.addEventListener("markeradded",function(event){self.onMarkerAdded(event)}),this.map.addEventListener("markerremoved",function(event){self.onMarkerRemoved(event)}),this.map.addEventListener("polygonadded",function(event){self.onPolygonAdded(event)}),this.map.addEventListener("polygonremoved",function(event){self.onPolygonRemoved(event)}),this.map.addEventListener("polylineadded",function(event){self.onPolylineAdded(event)}),this.map.addEventListener("fetchsuccess",function(event){self.onMapFetchSuccess(event)}),this.map.addEventListener("boundschanged",function(event){self.onBoundsChanged(event)}),this.map.addEventListener("click",function(event){event.target instanceof WPGMZA.Map&&self.finishEditingMapObject()}),this.rightClickCursor=WPGMZA.Marker.createInstance({draggable:!0}),WPGMZA.OSMMapEditPage&&this instanceof WPGMZA.OSMMapEditPage&&$(this.rightClickCursor.element).addClass("wpgmza-right-click-marker"),this.rightClickCursor.setVisible(!1),this.map.addEventListener("rightclick",placeRightClickMarker),this.rightClickCursor.addEventListener("dragend",placeRightClickMarker),$("#lock_start_viewport").on("change",onLockStartViewport),onLockStartViewport(),$("button#view-locked-viewport").on("click",function(event){var center=WPGMZA.stringToLatLng($("input[name='start_location']").val()),zoom=parseInt($("input[name='start_zoom']").val());self.map.setCenter(center),self.map.setZoom(zoom)}),$("form.wpgmza").on("change",function(event){self.onFormChanged(event)}),this.onFormChanged(),$("#add-marker, #update-marker").on("click",function(event){self.onSaveMarker(event)}),$("#cancel-marker-edit").on("click",function(event){self.finishEditingMapObject()}),$("#delete-marker").on("click",function(event){self.onDeleteMarker(event)}),$("#draw-polygon").on("click",function(event){WPGMZA.animateScroll($(".wpgmza-engine-map")),self.onDrawPolygon(event)}),$("#finish-editing-polygon").on("click",function(event){self.finishEditingMapObject()}),$("#delete-polygon").on("click",function(event){self.onDeletePolygon(event)}),$("#draw-polyline").on("click",function(event){WPGMZA.animateScroll($(".wpgmza-engine-map")),self.onDrawPolyline(event)}),$("#finish-editing-polyline").on("click",function(event){self.onFinishEditingPolyline(event)}),$("#delete-polyline").on("click",function(event){self.onDeletePolyline(event)}),$("#polygons").find("input, textarea, select").on("change input",function(event){self.onPolygonSettingChanged(event)}),$("#polylines").find("input, textarea, select").on("change input",function(event){self.onPolylineSettingChanged(event)}),this.drawingManager=WPGMZA.DrawingManager.createInstance(this.map),this.drawingManager.addEventListener("polygonclosed",function(event){self.onPolygonClosed(event)}),this.drawingManager.addEventListener("polylinecomplete",function(event){self.onPolylineComplete(event)}),this.vertexContextMenu=this.createVertexContextMenuInstance(),this.loadMapObjectTables(),$("#polygons").find("input, select, textarea").on("change",function(event){self.editMapObjectTarget instanceof WPGMZA.Polygon&&(self.editMapObjectTarget.modified=!0)}),$("#polylines").find("input, select, textarea").on("change",function(event){self.editMapObjectTarget&&(self.editMapObjectTarget.modified=!0)}),this.map.on("dragend",function(event){if(event.target.modified=!0,event.target.settings.dragged=!0,self.editMapObjectTarget instanceof WPGMZA.Marker&&event.target==self.editMapObjectTarget){var latLng=self.editMapObjectTarget.getPosition();$("input[name='lat']").val(latLng.lat),$("input[name='lng']").val(latLng.lng),$("[name='dragged']").prop("checked",!0)}}),$("form.wpgmza").on("change",function(event){self.bindUnloadListener()}),$("input[name='store_locator']").on("change",function(event){$(".wpgmza-map .store-locator").css({display:$(event.target).prop("checked")?"block":"none"})}),$("#zoom-range-slider").slider({range:!0,min:1,max:21,values:[$("input[name='min_zoom']").val(),$("input[name='max_zoom']").val()],slide:function(event,ui){self.onZoomLimitsChanged(event,ui)}}),$(".wpgmza-engine-map").append($("#markers-instructions")),$(".wpgmza-engine-map").append($("#polygon-instructions")),$(".wpgmza-engine-map").append($("#polyline-instructions")),$("input[name='bicycle']").on("change",function(event){self.map.enableBicycleLayer(event.target.checked)}),$("input[name='traffic']").on("change",function(event){self.map.enableTrafficLayer(event.target.checked)}),$("input[name='transport']").on("change",function(event){self.map.enablePublicTransportLayer(event.target.checked)}),$("input[name='show_points_of_interest']").on("change",function(event){self.map.showPointsOfInterest(event.target.checked)}),$("select[name='map_align']").on("change",function(event){self.map.setAlignment(event.target.value)}),window.Modernizr&&Modernizr.inputtypes.color||$("input[type='color']").spectrum(),$("form.wpgmza").submit(function(event){self.onSubmit(event)}),this.clearMarkerFields();var active=$("#map-edit-tabs").tabs("option","active"),panel=$("#map-edit-tabs>div")[active];if(panel){var id=$(panel).attr("id");this.showMapInstructions(id.replace(/s$/,""))}$(document).on("keyup",function(event){27==event.keyCode&&self.finishEditingMapObject()}),$("#wpgmza-big-polyline-dialog").remodal(),$("select[name='general_layout']").on("change",function(event){self.onGeneralLayoutChanged(event)});var mouseX,mouseY;$(document).on("mousemove",function(event){mouseX=event.clientX,mouseY=event.clientY}),$("#wpgmza-layout-editor").sortable({stop:function(event,ui){function removeStyle(elem,name){elem.style.removeProperty?elem.style.removeProperty(name):elem.style.removeAttribute(name)}var el=document.elementFromPoint(mouseX,mouseY);removeStyle(ui.item[0],"position"),removeStyle(ui.item[0],"left"),removeStyle(ui.item[0],"top"),$(el).hasClass("wpgmza-cell")&&"center"!=$(el).attr("data-grid-postiion")&&($(el).children().length||$.contains(ui.item[0],el)||$(el).append(ui.item))}}),this.setLayout(),$("form.wpgmza").on("keydown",function(e){if(13==e.keyCode&&"address"==$(e.target).attr("name"))return self.editMapObjectTarget&&-1!=self.editMapObjectTarget.id?$("#update-marker").click():$("#add-marker").click(),!1}),$("input[name='lat'], input[name='lng']").on("input",function(event){self.editMapObjectTarget instanceof WPGMZA.Marker&&(self.editMapObjectTarget.setPosition({lat:$("input[name='lat']").val(),lng:$("input[name='lng']").val()}),$("input[name='dragged']").prop("checked",!0))}),$("#wpgmza-map-edit-page>.wpgmza-preloader").remove(),$("form.wpgmza").show()},WPGMZA.MapEditPage.getConstructor=function(){var pro=WPGMZA.isProVersion();switch(WPGMZA.settings.engine){case"google-maps":return pro?WPGMZA.GoogleProMapEditPage:WPGMZA.GoogleMapEditPage;default:return pro?WPGMZA.OSMProMapEditPage:WPGMZA.OSMMapEditPage}},WPGMZA.MapEditPage.createInstance=function(){return new(WPGMZA.MapEditPage.getConstructor())},WPGMZA.MapEditPage.prototype.getInputNameWithoutPrefix=function(name){return name.replace(/^(polygon|polyline|heatmap)?-/,"")},WPGMZA.MapEditPage.prototype.getFieldValue=function(input){var value;switch(input.type.toLowerCase()){case"checkbox":case"radio":value=$(input).prop("checked");break;default:value=$(input).val()}return value},WPGMZA.MapEditPage.prototype.inputValueToMapObjectProperty=function(input,mapObject){var name=this.getInputNameWithoutPrefix(input.name),value=this.getFieldValue(input);return mapObject.hasOwnProperty(name)?mapObject[name]=value:mapObject.settings[name]=value,value},WPGMZA.MapEditPage.prototype.createVertexContextMenuInstance=function(){},WPGMZA.MapEditPage.prototype.getTabIndexByID=function(id){var result=null;return $("#map-edit-tabs .ui-tabs-nav a").each(function(index,el){if($(el).attr("href")=="#"+id)return result=index,!1}),result},WPGMZA.MapEditPage.prototype.enableMarkerButtons=function(enable){$("#marker-buttons>button").prop("disabled",!enable)},WPGMZA.MapEditPage.prototype.createOrUpdateMarker=function(latLng,preventRefreshControls){var marker,self=this;return!this.editMapObjectTarget||this.editMapObjectTarget instanceof WPGMZA.Marker||finishEditingMapObject(),marker=this.editMapObjectTarget?this.editMapObjectTarget:WPGMZA.Marker.createInstance(),$("#markers").find("input[name], select[name], textarea[name]").each(function(index,el){self.inputValueToMapObjectProperty(el,marker)}),marker.setPosition(latLng),marker.setAnimation(marker.settings.animation),marker.map||this.map.addMarker(marker),$("input[name='address']").val(""),this.enableMarkerButtons(!0),this.rightClickCursor.setVisible(!1),marker.modified=!0,this.bindUnloadListener(),this.map.panTo(latLng),WPGMZA.isProVersion()||this.doAJAXSubmit(),marker},WPGMZA.MapEditPage.prototype.clearMarkerFields=function(){$("#markers").find("input[name], textarea[name], select[name]").each(function(index,el){switch(String($(el).attr("type")).toLowerCase()){case"radio":case"checkbox":var checked=!1;"approved"==$(el).attr("name")&&(checked=!0),$(el).prop("checked",checked);break;default:"select"==$(el).prop("tagName").toLowerCase()?$(el).val($(el).find("option:first-child").val()):$(el).val("")}})},WPGMZA.MapEditPage.prototype.editMarker=function(marker){$("#wpgmza_map_panel .wpgmza-tabs").tabs({active:0}),marker&&(this.editMapObjectTarget=marker,this.map.panTo(marker.getPosition()),marker.setDraggable(!0),$("#markers").find("input, select, textarea").each(function(index,el){if(!$(el).parents(".wp-editor-wrap").length){var val,name=$(el).attr("name");switch(val=marker.hasOwnProperty(name)?marker[name]:marker.settings[name],String($(el).attr("type")).toLowerCase()){case"checkbox":case"radio":$(el).prop("checked",val);break;default:$(el).val(val)}(!val||"string"==typeof val&&0==val.length)&&el.nodeName.match(/select/i)&&$(el).find("option:first-child").prop("selected",!0)}}),$("#markers").removeClass("add-marker").addClass("update-marker"))},WPGMZA.MapEditPage.prototype.deleteMarker=function(marker){if(!(marker instanceof WPGMZA.Marker))throw new Error("Argument is not a marker");if(marker.map!=this.map)throw new Error("Wrong map");this.deleteIDs.markers.push(marker.id),this.map.deleteMarker(marker)},WPGMZA.MapEditPage.prototype.deleteMarkerByID=function(id){this.deleteIDs.markers.push(id),this.map.deleteMarkerByID(id)},WPGMZA.MapEditPage.prototype.onDeleteMarker=function(event){this.editMapObjectTarget instanceof WPGMZA.Marker&&(this.deleteMarkerByID(this.editMapObjectTarget.id),this.finishEditingMapObject(),this.markerTable.refresh(),this.bindUnloadListener())},WPGMZA.MapEditPage.prototype.onRightClickMap=function(event){$("#wpgmza_map_panel .wpgmza-tabs").tabs({active:this.getTabIndexByID("markers")});var value=(event.latLng.lat+", "+event.latLng.lng).replace(/[() ]/g,"");$("input[name='address']").val(value),this.rightClickCursor.setPosition(event.latLng),this.rightClickCursor.setVisible(!0)},WPGMZA.MapEditPage.prototype.onSaveMarker=function(event){var self=this,address=$("form.wpgmza input[name='address']").val(),marker=this.editMapObjectTarget;if(address.length)if($("#geocoder-error").hide(),marker&&marker.settings.dragged)self.onGeocoderResponse(marker.getPosition());else{var geocoder=WPGMZA.Geocoder.createInstance();this.enableMarkerButtons(!1),geocoder.getLatLngFromAddress({address:address},function(latLng){latLng?self.onGeocoderResponse(latLng):alert(WPGMZA.localized_strings.geocode_failed)})}else alert(WPGMZA.localized_strings.no_address_entered)},WPGMZA.MapEditPage.prototype.onGeocoderResponse=function(latLng){if(this.enableMarkerButtons(!0),null==latLng)return $("#geocoder-error").show(),void $("input[name='address']").focus().select();this.createOrUpdateMarker(latLng)},WPGMZA.MapEditPage.prototype.onMarkerAdded=function(event){var self=this;event.marker.addEventListener("click",function(event){self.onMarkerClicked(event)})},WPGMZA.MapEditPage.prototype.onMarkerRemoved=function(event){event.marker.removeEventListener("click",function(event){onMarkerClicked(event)})},WPGMZA.MapEditPage.prototype.onMarkerClicked=function(event){this.editMarker(event.target)},WPGMZA.MapEditPage.prototype.getPolygonFields=function(){var fields={};return $("#polygons").find("input, select, textarea").each(function(index,el){var name=$(el).attr("name");name&&(name=name.replace(/^polygon-/,""),fields[name]=$(el).val())}),fields},WPGMZA.MapEditPage.prototype.editPolygon=function(polygon){var self=this;$("#wpgmza_map_panel .wpgmza-tabs").tabs({active:this.getTabIndexByID("polygons")}),$("#polygons .wpgmza-admin-form-hideable").removeClass("wpgmza-admin-form-hidden"),polygon&&(this.editMapObjectTarget=polygon,polygon.setEditable(!0),$("input[name='polygon-name']").val(polygon.name),$("#polygons input").each(function(index,el){if(!$(el).prop("disabled")&&$(el).attr("name")){var name=self.getInputNameWithoutPrefix(el.name);self.getFieldValue(el);name in polygon?$(el).val(polygon[name]):$(el).val(polygon.settings[name])}}),$("#polygons").removeClass("add-polygon").addClass("update-polygon"))},WPGMZA.MapEditPage.prototype.onDrawPolygon=function(event){var fields=this.getPolygonFields();$("#polygons .wpgmza-admin-form-hideable").removeClass("wpgmza-admin-form-hidden"),this.drawingManager.setDrawingMode(WPGMZA.DrawingManager.MODE_POLYGON),this.drawingManager.setOptions(fields)},WPGMZA.MapEditPage.prototype.onPolygonClosed=function(event){var fields=this.getPolygonFields(),polygon=WPGMZA.Polygon.createInstance({settings:fields},event.enginePolygon);polygon.modified=!0,this.bindUnloadListener(),this.drawingManager.setDrawingMode(WPGMZA.DrawingManager.MODE_NONE),this.map.addPolygon(polygon),this.editPolygon(polygon)},WPGMZA.MapEditPage.prototype.onFinishEditingPolygon=function(event){this.finishEditingMapObject()},WPGMZA.MapEditPage.prototype.onDeletePolygon=function(event){if(this.editMapObjectTarget instanceof WPGMZA.Polygon){var id=this.editMapObjectTarget.id;this.deleteIDs.polygons.push(id),this.map.deletePolygon(this.editMapObjectTarget),this.finishEditingMapObject(),this.bindUnloadListener()}},WPGMZA.MapEditPage.prototype.onPolygonModified=function(vertex){this.editMapObjectTarget instanceof WPGMZA.Polygon&&(this.editMapObjectTarget.modified=!0,this.bindUnloadListener())},WPGMZA.MapEditPage.prototype.onPolygonAdded=function(event){var self=this;event.polygon.addEventListener("click",function(event){self.onPolygonClicked(event)})},WPGMZA.MapEditPage.prototype.onPolygonRemoved=function(event){},WPGMZA.MapEditPage.prototype.onPolygonClicked=function(event){this.editPolygon(event.target)},WPGMZA.MapEditPage.prototype.onPolygonSettingChanged=function(event){if(this.editMapObjectTarget instanceof WPGMZA.Polygon)return this.inputValueToMapObjectProperty(event.target,this.editMapObjectTarget)},WPGMZA.MapEditPage.prototype.getPolylineFields=function(){var fields={};return $("#polylines").find("input, select, textarea").each(function(index,el){var name=$(el).attr("name");name&&(name=name.replace(/^polyline-/,""),fields[name]=$(el).val())}),fields},WPGMZA.MapEditPage.prototype.editPolyline=function(polyline){$("#wpgmza_map_panel .wpgmza-tabs").tabs({active:this.getTabIndexByID("polylines")}),$("#polylines .wpgmza-admin-form-hideable").removeClass("wpgmza-admin-form-hidden"),polyline&&(this.editMapObjectTarget=polyline,polyline.setEditable(!0),$("#polylines input").each(function(index,el){if(!$(el).prop("disabled")&&$(el).attr("name")){var nameWithoutPrefix=$(el).attr("name").replace(/^polyline-/,"");$(el).val(polyline.settings[nameWithoutPrefix])}}),$("input[name='polyline-title']").val(polyline.title),$("#polylines").removeClass("add-polyline").addClass("update-polyline"))},WPGMZA.MapEditPage.prototype.onDrawPolyline=function(event){var fields=this.getPolylineFields();$("#polylines .wpgmza-admin-form-hideable").removeClass("wpgmza-admin-form-hidden"),this.drawingManager.setOptions(fields),this.drawingManager.setDrawingMode(WPGMZA.DrawingManager.MODE_POLYLINE)},WPGMZA.MapEditPage.prototype.onPolylineComplete=function(event){var fields=this.getPolylineFields(),polyline=WPGMZA.Polyline.createInstance({settings:fields},event.enginePolyline);polyline.modified=!0,this.bindUnloadListener(),this.drawingManager.setDrawingMode(WPGMZA.DrawingManager.MODE_NONE),this.map.addPolyline(polyline),this.editPolyline(polyline)},WPGMZA.MapEditPage.prototype.onFinishEditingPolyline=function(event){this.finishEditingMapObject()},WPGMZA.MapEditPage.prototype.onDeletePolyline=function(event){if(this.editMapObjectTarget instanceof WPGMZA.Polyline){var id=this.editMapObjectTarget.id;this.deleteIDs.polylines.push(id),this.map.deletePolyline(this.editMapObjectTarget),this.finishEditingMapObject(),this.bindUnloadListener()}},WPGMZA.MapEditPage.prototype.onPolylineSettingChanged=function(event){if(this.editMapObjectTarget instanceof WPGMZA.Polyline)return this.inputValueToMapObjectProperty(event.target,this.editMapObjectTarget)},WPGMZA.MapEditPage.prototype.onPolylineModified=function(vertex){this.editMapObjectTarget instanceof WPGMZA.Polyline&&(this.editMapObjectTarget.modified=!0,this.bindUnloadListener())},WPGMZA.MapEditPage.prototype.onPolylineAdded=function(event){var self=this;event.polyline.addEventListener("click",function(event){self.onPolylineClicked(event)})},WPGMZA.MapEditPage.prototype.onPolylineRemoved=function(event){polyline.removeEventListener("click",onPolylineClicked)},WPGMZA.MapEditPage.prototype.onPolylineClicked=function(event){if("google-maps"==WPGMZA.settings.engine&&event.target.getPoints().length>1e3)return this.warningPolyline=event.target,void $("#wpgmza-big-polyline-dialog").remodal().open();this.editPolyline(event.target)},WPGMZA.MapEditPage.prototype.onFormChanged=function(){$("form.wpgmza .height-warning").css({display:"%"==$("form.wpgmza select[name='height_units']>option:selected").val()?"inline-block":"none"})},WPGMZA.MapEditPage.prototype.onBoundsChanged=function(event){var latLng=this.map.getCenter(),zoom=this.map.getZoom();$("input[name='start_location']").val(latLng.lat+", "+latLng.lng),$("input[name='start_zoom']").val(zoom),$("#zoom-level-slider").slider("value",zoom),this.bindUnloadListener()},WPGMZA.MapEditPage.prototype.onBeforeUnload=function(event){var confirmationMessage="Are you sure you want to leave without saving your changes?";return event.preventDefault(),event.returnValue=confirmationMessage,confirmationMessage},WPGMZA.MapEditPage.prototype.bindUnloadListener=function(event){this.initialBoundsChanged?this.initialBoundsChanged=!1:this.unloadListenerBound||(window.addEventListener("beforeunload",this.onBeforeUnload),this.unloadListenerBound=!0)},WPGMZA.MapEditPage.prototype.applyThemeData=function(){},WPGMZA.MapEditPage.prototype.showMapInstructions=function(type){$(".wpgmza-engine-map *[id$='instructions']").hide(),$("#"+type+"-instructions").show()},WPGMZA.MapEditPage.prototype.onMapPanelTabActivated=function(event,ui){var singular=ui.newPanel.attr("id").replace(/s$/,"");this.showMapInstructions(singular);var target=event.target;window.sessionStorage&&sessionStorage.setItem(target.id,$(target).tabs("option","active"))},WPGMZA.MapEditPage.prototype.loadMapObjectTables=function(){this.markerTable=new WPGMZA.AdminTable($("#marker-table-container .wpgmza-datatable[data-object-type='markers']")[0]),this.polygonTable=new WPGMZA.AdminTable($(".wpgmza-datatable[data-object-type='polygons']")[0]),this.polylineTable=new WPGMZA.AdminTable($(".wpgmza-datatable[data-object-type='polylines']")[0])},WPGMZA.MapEditPage.prototype.onTableRowEditMarker=function(event){var marker,td=$(event.target).closest("td"),id=td.attr("data-marker-id"),latLng={lat:parseFloat(td.attr("data-lat")),lng:parseFloat(td.attr("data-lng"))};(marker=this.map.getMarkerByID(id))?this.editMarker(marker):this.onFetchEditMarkerID=id,this.map.panTo(latLng)},WPGMZA.MapEditPage.prototype.onMapFetchSuccess=function(event){this.onFetchEditMarkerID&&(this.editMarker(this.map.getMarkerByID(this.onFetchEditMarkerID)),this.onFetchEditMarkerID=null)},WPGMZA.MapEditPage.prototype.deletePolygonByID=function(id){this.deleteIDs.polygons.push(id),this.map.deletePolygonByID(id)},WPGMZA.MapEditPage.prototype.deletePolylineByID=function(id){this.deleteIDs.polylines.push(id),this.map.deletePolylineByID(id)},WPGMZA.MapEditPage.prototype.onZoomLimitsChanged=function(event,ui){var min=ui.values[0],max=ui.values[1];$("input[name='min_zoom']").val(min),$("input[name='max_zoom']").val(max),this.map.setMinZoom(min),this.map.setMaxZoom(max)},WPGMZA.MapEditPage.prototype.getEditFunctionNames=function(){return["editMarker","editPolygon","editPolyline"]},WPGMZA.MapEditPage.prototype.finishEditingMapObject=function(){this.drawingManager.setDrawingMode(WPGMZA.DrawingManager.MODE_NONE),this.editMapObjectTarget&&(this.editMapObjectTarget instanceof WPGMZA.Marker&&this.editMapObjectTarget.setDraggable(!1),this.doAJAXSubmit(),this.clearMarkerFields(),$("#markers").removeClass("update-marker").addClass("add-marker"),$("#polygons input:not([type])").val(""),$("#polygons").removeClass("update-polygon").addClass("add-polygon"),$("input[name='polyline-title']").val(""),$("#polylines").removeClass("update-polyline").addClass("add-polyline"),this.editMapObjectTarget.setEditable&&this.editMapObjectTarget.setEditable(!1),this.editMapObjectTarget=null)},WPGMZA.MapEditPage.prototype.onGeneralLayoutChanged=function(event){var self=this,layout=$(event.target).val();switch($("select[name='general_layout']>option").each(function(index,el){$(self.map.element).removeClass($(el).val())}),$(self.map.element).addClass(layout),layout){case"wpgmza-compact":var index;-1!=(index=(layout=this.map.getLayout()).order.indexOf("marker-listing"))&&layout.order.splice(index,1);for(var position in layout.grid)"marker-listing"==layout.grid[position]&&delete layout.grid[position];layout.grid["center-right"]="marker-listing",this.map.setLayout(layout)}},WPGMZA.MapEditPage.prototype.getMapObjectData=function(){for(var data={markers:[],polygons:[],polylines:[],deleteIDs:this.deleteIDs},i=0;i<this.map.markers.length;i++)this.map.markers[i].modified&&data.markers.push(this.map.markers[i].toJSON());for(i=0;i<this.map.polygons.length;i++)this.map.polygons[i].modified&&data.polygons.push(this.map.polygons[i].toJSON());for(i=0;i<this.map.polylines.length;i++)this.map.polylines[i].modified&&data.polylines.push(this.map.polylines[i].toJSON());return data},WPGMZA.MapEditPage.prototype.getLayout=function(){for(var elements=$("#wpgmza-layout-editor").find("[data-wpgmza-layout-element]"),data={order:[],grid:{}},i=0;i<elements.length;i++){var grid=$(elements[i]).closest(".wpgmza-in-map-grid"),name=$(elements[i]).attr("data-wpgmza-layout-element");grid.length?data.grid[$(elements[i]).closest(".wpgmza-cell").attr("data-grid-position")]=name:data.order.push(name)}return data},WPGMZA.MapEditPage.prototype.setLayout=function(){this.map.settings.layout&&this.map.setLayout(JSON.parse(this.map.settings.layout),$("#wpgmza-layout-editor"))},WPGMZA.MapEditPage.prototype.doAJAXSubmit=function(){var self=this,data=this.getMapObjectData();$("#map-edit-tabs *:input").prop("disabled",!0),$.ajax({method:"POST",url:WPGMZA.ajaxurl,data:{action:"wpgmza_ajax_submit",map_id:this.map.id,"map-objects":JSON.stringify(data)},success:function(response){for(var guid in response.newIDsByGUID){var object=self.map.getObjectByGUID(guid);object.id=parseInt(response.newIDsByGUID[guid]),object.modified=!1}self.finishEditingMapObject()},error:function(xhr,textStatus,errorThrown){if(WPGMZA.isDeveloperMode())throw new Error(xhr.responseText);alert(xhr.responseText)},complete:function(){$("#map-edit-tabs *:input").prop("disabled",!1)}})},WPGMZA.MapEditPage.prototype.onSubmit=function(event){var data=this.getMapObjectData(),input=$("<input name='map-objects' type='hidden'/>");input.val(JSON.stringify(data)),$("form.wpgmza").append(input);var layout=$("<input name='layout' type='hidden'/>");layout.val(JSON.stringify(this.getLayout())),$("form.wpgmza").append(layout),$("form.wpgmza .no-submit *:input").prop("disabled",!0),window.removeEventListener("beforeunload",this.onBeforeUnload)},$(document).ready(function(){"map-edit"==WPGMZA.current_page&&WPGMZA.runCatchableTask(function(){WPGMZA.mapEditPage=WPGMZA.MapEditPage.createInstance(),WPGMZA.events.dispatchEvent("mapeditpageready")},$("form.wpgmza"))})}(jQuery),jQuery,WPGMZA.MarkerFilter=function(options){this.functionChain=[this.isMarkerAllowedByRadius,this.isMarkerAllowedByString],this.hideAll=null,this.center=null,this.radius=null,this.categories=null,this.string=null,this.logic=1==WPGMZA.settings.cat_logic?WPGMZA.MarkerFilter.LOGIC_AND:WPGMZA.MarkerFilter.LOGIC_OR,this.units=WPGMZA.MarkerFilter.UNITS_KILOMETERS;for(var name in options)this[name]=options[name]},WPGMZA.MarkerFilter.LOGIC_OR="or",WPGMZA.MarkerFilter.LOGIC_AND="and",WPGMZA.MarkerFilter.getConstructor=function(){return WPGMZA.isProVersion()?WPGMZA.ProMarkerFilter:WPGMZA.MarkerFilter},WPGMZA.MarkerFilter.createInstance=function(options){return new(WPGMZA.MarkerFilter.getConstructor())(options)},WPGMZA.MarkerFilter.prototype.isMarkerAllowedByRadius=function(marker){if(!this.radius)return!0;if(!this.center)throw new Error("You must supply a center to filter by radius");var position=marker.getPosition();return WPGMZA.Map.getGeographicDistance(position.lat,position.lng,this.center.lat,this.center.lng)<=WPGMZA.Distance.uiToKilometers(this.radius)},WPGMZA.MarkerFilter.prototype.isMarkerAllowedByString=function(marker){return null==this.string||0==this.string.length||this.cachedSearchRegex.test(marker.title)},WPGMZA.MarkerFilter.prototype.isMarkerAllowed=function(marker){if(this.hideAll)return!1;for(var i=0;i<this.functionChain.length;i++)if(!this.functionChain[i].call(this,marker))return!1;return!0},WPGMZA.MarkerFilter.prototype.apply=function(markers){var result=[];return this.map(markers,function(marker,allowed){allowed&&result.push(marker)}),result},WPGMZA.MarkerFilter.prototype.map=function(markers,callback){this.prepare();for(var i=0;i<markers.length;i++)callback(markers[i],this.isMarkerAllowed(markers[i]))},WPGMZA.MarkerFilter.prototype.prepare=function(){this.categoryLookup=null,this.cachedSearchRegex=null,this.string&&this.string.length>0&&(this.cachedSearchRegex=new RegExp(this.string,"i"))},function($){WPGMZA.Marker=function(row){var self=this;WPGMZA.assertInstanceOf(this,"Marker"),this.lat="36.778261",this.lng="-119.4179323999",this.address="California",this.title=null,this.description="",this.link="",this.icon="",this.approved=1,this.pic=null,WPGMZA.MapObject.apply(this,arguments),row&&row.heatmap||this.addEventListener("added",function(event){self.onAdded(event)})},WPGMZA.Marker.prototype=Object.create(WPGMZA.MapObject.prototype),WPGMZA.Marker.prototype.constructor=WPGMZA.Marker,WPGMZA.Marker.getConstructor=function(){switch(WPGMZA.settings.engine){case"google-maps":return WPGMZA.isProVersion()?WPGMZA.GoogleProMarker:WPGMZA.GoogleMarker;default:return WPGMZA.isProVersion()?WPGMZA.OSMProMarker:WPGMZA.OSMMarker}},WPGMZA.Marker.createInstance=function(row){return new(WPGMZA.Marker.getConstructor())(row)},WPGMZA.Marker.ANIMATION_NONE="0",WPGMZA.Marker.ANIMATION_BOUNCE="1",WPGMZA.Marker.ANIMATION_DROP="2",WPGMZA.Marker.prototype.onAdded=function(event){var self=this;this.infoWindow=WPGMZA.InfoWindow.createInstance(this),this.addEventListener("click",function(event){self.onClick(event)}),this.addEventListener("mouseover",function(event){self.onMouseOver(event)}),this.addEventListener("select",function(event){self.onSelect(event)}),this.map.settings.marker==this.id&&self.trigger("select")},WPGMZA.Marker.prototype.hidePreviousInteractedInfoWindow=function(){this.map.lastInteractedMarker&&this.map.lastInteractedMarker.infoWindow.close()},WPGMZA.Marker.prototype.openInfoWindow=function(){this.hidePreviousInteractedInfoWindow(),this.infoWindow.open(),this.map.lastInteractedMarker=this},WPGMZA.Marker.prototype.onClick=function(event){},WPGMZA.Marker.prototype.onSelect=function(event){this.openInfoWindow()},WPGMZA.Marker.prototype.onMouseOver=function(event){this.map.settings.info_window_open_by==WPGMZA.InfoWindow.OPEN_BY_HOVER&&this.openInfoWindow()},WPGMZA.Marker.prototype.getIcon=function(){return WPGMZA.settings.default_marker_icon},WPGMZA.Marker.prototype.getPosition=function(){return{lat:parseFloat(this.lat),lng:parseFloat(this.lng)}},WPGMZA.Marker.prototype.setPosition=function(latLng){this.lat=parseFloat(latLng.lat),this.lng=parseFloat(latLng.lng)},WPGMZA.Marker.prototype.getAnimation=function(animation){return this.settings.animation},WPGMZA.Marker.prototype.setAnimation=function(animation){this.settings.animation=animation},WPGMZA.Marker.prototype.getVisible=function(visible){},WPGMZA.Marker.prototype.setVisible=function(visible){!visible&&this.infoWindow&&this.infoWindow.close()},WPGMZA.Marker.prototype.getDraggable=function(){},WPGMZA.Marker.prototype.setDraggable=function(draggable){},WPGMZA.Marker.prototype.panIntoView=function(){if(!this.map)throw new Error("Marker hasn't been added to a map");this.map.setCenter(this.getPosition())},WPGMZA.Marker.prototype.toJSON=function(){var result=WPGMZA.MapObject.prototype.toJSON.call(this),position=this.getPosition();return $.extend(result,{lat:position.lat,lng:position.lng,address:this.address,title:this.title,description:this.description,link:this.link,icon:this.icon,pic:this.pic,approved:this.approved}),result}}(jQuery),function($){WPGMZA.Polygon=function(row,enginePolygon){WPGMZA.assertInstanceOf(this,"Polygon"),this.paths=null,this.title=null,this.name=null,this.link=null,WPGMZA.MapObject.apply(this,arguments)},WPGMZA.Polygon.prototype=Object.create(WPGMZA.MapObject.prototype),WPGMZA.Polygon.prototype.constructor=WPGMZA.Polygon,WPGMZA.Polygon.getConstructor=function(){switch(WPGMZA.settings.engine){case"google-maps":return WPGMZA.isProVersion()?WPGMZA.GoogleProPolygon:WPGMZA.GooglePolygon;default:return WPGMZA.isProVersion()?WPGMZA.OSMProPolygon:WPGMZA.OSMPolygon}},WPGMZA.Polygon.createInstance=function(row,engineObject){return new(WPGMZA.Polygon.getConstructor())(row,engineObject)},WPGMZA.Polygon.prototype.toJSON=function(){var result=WPGMZA.MapObject.prototype.toJSON.call(this);return $.extend(result,{name:this.name,title:this.title,link:this.link}),result}}(jQuery),jQuery,WPGMZA.Polyline=function(row,googlePolyline){WPGMZA.assertInstanceOf(this,"Polyline"),this.title=null,WPGMZA.MapObject.apply(this,arguments)},WPGMZA.Polyline.prototype=Object.create(WPGMZA.MapObject.prototype),WPGMZA.Polyline.prototype.constructor=WPGMZA.Polyline,WPGMZA.Polyline.getConstructor=function(){switch(WPGMZA.settings.engine){case"google-maps":return WPGMZA.GooglePolyline;default:return WPGMZA.OSMPolyline}},WPGMZA.Polyline.createInstance=function(row,engineObject){return new(WPGMZA.Polyline.getConstructor())(row,engineObject)},WPGMZA.Polyline.prototype.getPoints=function(){return this.toJSON().points},WPGMZA.Polyline.prototype.toJSON=function(){var result=WPGMZA.MapObject.prototype.toJSON.call(this);return result.title=this.title,result},function($){function onBeforeUnload(event){var confirmationMessage="Are you sure you want to leave without saving your changes?";return event.preventDefault(),event.returnValue=confirmationMessage,confirmationMessage}function bindUnloadListener(event){unloadListenerBound||(window.addEventListener("beforeunload",onBeforeUnload),unloadListenerBound=!0)}var unloadListenerBound=!1;$(document).ready(function(){var options={},active=0,element=$("#wpgmza-settings-tabs");"map-settings"==WPGMZA.current_page&&(window.sessionStorage&&(active=parseInt(sessionStorage.getItem("wpgmza-settings-tabs")),isNaN(active)&&(active=0)),options={active:active,activate:function(event,ui){window.sessionStorage&&sessionStorage.setItem("wpgmza-settings-tabs",$(event.target).tabs("option","active"))}},$(element).tabs(options),$("input[name='scroll_animation_milliseconds']").on("change",function(event){var progress=$("#animation-example"),timing=parseInt($(event.target).val());$("#animation-example-container").show(),$(progress).val(0),$(progress).animate({value:100},timing)}),$("select[name='data_transmission_mode']").on("change",function(event){$(".transmission-info").hide(),$("#"+event.target.value+"-info").show()}).change(),$("form.wpgmza").on("change",bindUnloadListener),$("form.wpgmza input[type='submit']").on("click",function(){var input=$("input[name='info_window_width']"),infoWindowWidth=input.val(),min=parseInt(input.attr("min"));infoWindowWidth&&0!=infoWindowWidth.length&&parseInt(infoWindowWidth)<min&&($("a[href='#infowindows']").click(),WPGMZA.animateScroll(input,250))}),$("form.wpgmza").on("submit",function(event){window.removeEventListener("beforeunload",onBeforeUnload)}))})}(jQuery),function($){WPGMZA.StoreLocator=function(map){var self=this;WPGMZA.EventDispatcher.call(this),WPGMZA.assertInstanceOf(this,"StoreLocator"),this.map=this.parent=map,this.element=$(map.element).find(".store-locator")[0],this.units=WPGMZA.Distance.KILOMETERS,this.circle=null,this.closestMarker=null,this.displayingResult=!1,this.address=$(this.element).find("[name='store_locator_address']"),this.radius=$(this.element).find("[name='store_locator_radius']"),this.error=$(this.element).find(".error"),this.noResults=$(this.element).find(".no-results"),$(this.element).css({display:map.settings.store_locator_enabled?"block":"none"}),this.address.val(map.settings.store_locator_default_address),map.settings.store_locator_default_radius&&this.radius.val(map.settings.store_locator_default_radius),$(this.element).find(".wpgmza-submit").on("click",function(event){self.onSearch(event)}),$(this.element).find(".wpgmza-reset").on("click",function(event){self.onReset(event)}),$(this.element).find("input").on("keydown",function(event){if(13==event.keyCode)return self.onSearch(event),event.preventDefault(),!1}),this.map.addEventListener("fetchsuccess",function(event){self.filterMarkers()}),this.clear(),this.initialized=!0},WPGMZA.StoreLocator.prototype=Object.create(WPGMZA.EventDispatcher.prototype),WPGMZA.StoreLocator.prototype.constructor=WPGMZA.StoreLocator,WPGMZA.StoreLocator.getConstructor=function(){if(WPGMZA.isProVersion())switch(WPGMZA.settings.engine){case"google-maps":return WPGMZA.GoogleProStoreLocator;default:return WPGMZA.OSMProStoreLocator}else switch(WPGMZA.settings.engine){case"google-maps":return WPGMZA.GoogleStoreLocator;default:return WPGMZA.OSMStoreLocator}},WPGMZA.StoreLocator.createInstance=function(map){return new(WPGMZA.StoreLocator.getConstructor())(map)},WPGMZA.StoreLocator.prototype.clear=function(){this.showCircle(!1),this.showCenterMarker(!1),this.closestMarker&&this.closestMarker.setAnimation(this.closestMarker.settings.animation),this.closestMarker=null,this.error.hide(),this.noResults.hide(),this.displayingResult=!1},WPGMZA.StoreLocator.prototype.getMarkerFilter=function(){var filter=WPGMZA.MarkerFilter.createInstance();return this.map.settings.store_locator_hide_before_search&&!this.displayingResult&&(filter.hideAll=!0),this.displayingResult&&this.map.settings.hide_markers_outside_store_locator_radius&&(filter.center=this.centerPoint,filter.radius=parseFloat($(this.element).find("[name='store_locator_radius']").val())),this.map.settings.store_locator_name_search&&(filter.string=$(this.element).find("[name='store_locator_title_search_term']").val()),filter},WPGMZA.StoreLocator.prototype.filterMarkers=function(){var event={type:"filtercomplete",markers:[]};this.getMarkerFilter().map(this.map.markers,function(marker,allowed){allowed&&event.markers.push(marker),marker.setVisible(allowed)}),this.initialized&&this.dispatchEvent(event)},WPGMZA.StoreLocator.prototype.getRadius=function(){return parseFloat(this.radius.val())},WPGMZA.StoreLocator.prototype.getZoomFromRadius=function(){var r=WPGMZA.Distance.uiToKilometers(this.getRadius());return Math.round(14-Math.log(r)/Math.LN2)},WPGMZA.StoreLocator.prototype.showCircle=function(options){},WPGMZA.StoreLocator.prototype.showCenterMarker=function(latLng){this.centerMarker||(this.centerMarker=WPGMZA.Marker.createInstance()),latLng&&(this.centerMarker.setPosition(latLng),this.centerMarker.setAnimation(WPGMZA.Marker.ANIMATION_BOUNCE))},WPGMZA.StoreLocator.prototype.onSearch=function(event){var self=this,button=$(this.element).find(".wpgmza-submit"),restrict=this.map.settings.store_locator_restrict,geocoder=WPGMZA.Geocoder.createInstance(),addressInput=$(this.element).find("[name='store_locator_address']"),options={address:addressInput.val()||addressInput.attr("value")};restrict&&restrict.length&&(options.country=restrict),this.showCircle(!1),this.clear(),options.address.length?(button.prop("disabled",!0),geocoder.getLatLngFromAddress(options,function(latLng){button.prop("disabled",!1),latLng?self.onGeocodeSuccess(latLng):self.onNoResults()})):alert(WPGMZA.localized_strings.no_address_entered)},WPGMZA.StoreLocator.prototype.onGeocodeSuccess=function(latLng){var zoom=this.getZoomFromRadius();this.map.getClosestMarker(latLng);this.showCircle(latLng),this.map.settings.store_locator_bounce&&this.showCenterMarker(latLng),this.map.setZoom(zoom),this.map.panTo(latLng),this.displayingResult=!0,this.centerPoint=latLng,this.filterMarkers(),this.dispatchEvent({type:"geocodesuccess",latLng:latLng})},WPGMZA.StoreLocator.prototype.onNoResults=function(){this.noResults.show()},WPGMZA.StoreLocator.prototype.onReset=function(event){this.clear(),$(this.element).find("input[name='store_locator_address'], input[name='store_locator_title_search_term']").val("")}}(jQuery),function($){WPGMZA.Tour=function(){var self=this;if(window.hopscotch){this.tour={id:"wpgmza-tour",steps:[]};for(var i=0;i<wpgmza_tour_data.length;i++){var item=wpgmza_tour_data[i];item.target=$(item.target)[0],item.target&&(item.zindex=9999,this.tour.steps.push(item))}hopscotch.listen("beforeShow",function(event){var step=self.tour.steps[hopscotch.getCurrStepNum()];step.javascript&&eval(step.javascript)}),hopscotch.listen("close",function(){window.Cookies.set("wpgmza-tour-taken",!0)}),hopscotch.listen("end",function(){window.Cookies.set("wpgmza-tour-taken",!0)})}},WPGMZA.Tour.prototype.start=function(){$("#wpgmza_tabs").tabs({active:0}),hopscotch.startTour(this.tour)},$(document).ready(function(event){WPGMZA.tour=new WPGMZA.Tour,window.location.hash.match(/tour/)&&WPGMZA.tour.start(),$("#take-a-tour a").on("click",function(event){WPGMZA.tour.start()})})}(jQuery),function($){WPGMZA.VertexContextMenu=function(mapEditPage,items){WPGMZA.assertInstanceOf(this,"VertexContextMenu"),this.mapEditPage=mapEditPage,this.element=document.createElement("div"),this.element.className="wpgmza-vertex-context-menu";for(var i=0;i<items.length;i++){var item=$("<div/>");item.html(items[i]),$(this.element).append(item)}}}(jQuery),jQuery,WPGMZA.GoogleDrawingManager=function(map){var self=this;WPGMZA.DrawingManager.call(this,map),this.mode=null,this.googleDrawingManager=new google.maps.drawing.DrawingManager({drawingControl:!1,polygonOptions:{editable:!0},polylineOptions:{editable:!0}}),this.googleDrawingManager.setMap(map.googleMap),google.maps.event.addListener(this.googleDrawingManager,"markercomplete",function(marker){self.onMarkerPlaced(marker)}),google.maps.event.addListener(this.googleDrawingManager,"polygoncomplete",function(polygon){self.onPolygonClosed(polygon)}),google.maps.event.addListener(this.googleDrawingManager,"polylinecomplete",function(polyline){self.onPolylineComplete(polyline)})},WPGMZA.GoogleDrawingManager.prototype=Object.create(WPGMZA.DrawingManager.prototype),WPGMZA.GoogleDrawingManager.prototype.constructor=WPGMZA.GoogleDrawingManager,WPGMZA.GoogleDrawingManager.prototype.setDrawingMode=function(mode){var googleMode;switch(WPGMZA.DrawingManager.prototype.setDrawingMode.call(this,mode),mode){case WPGMZA.DrawingManager.MODE_NONE:googleMode=null;break;case WPGMZA.DrawingManager.MODE_MARKER:googleMode=google.maps.drawing.OverlayType.MARKER;break;case WPGMZA.DrawingManager.MODE_POLYGON:googleMode=google.maps.drawing.OverlayType.POLYGON;break;case WPGMZA.DrawingManager.MODE_POLYLINE:googleMode=google.maps.drawing.OverlayType.POLYLINE;break;default:throw new Error("Invalid drawing mode")}this.googleDrawingManager.setDrawingMode(googleMode)},WPGMZA.GoogleDrawingManager.prototype.setOptions=function(options){this.googleDrawingManager.setOptions({polygonOptions:options,polylineOptions:options})},WPGMZA.GoogleDrawingManager.prototype.onMarkerPlaced=function(googleMarker){var event=new WPGMZA.Event("markerplaced",googleMarker),position=googleMarker.getPosition();event.engineMarker=googleMarker,event.latLng={lat:position.lat(),lng:position.lng()},googleMarker.setMap(null),this.dispatchEvent(event)},WPGMZA.GoogleDrawingManager.prototype.onPolygonClosed=function(googlePolygon){var event=new WPGMZA.Event("polygonclosed");event.enginePolygon=googlePolygon,this.dispatchEvent(event)},WPGMZA.GoogleDrawingManager.prototype.onPolylineComplete=function(googlePolyline){var event=new WPGMZA.Event("polylinecomplete");event.enginePolyline=googlePolyline,this.dispatchEvent(event)},jQuery,WPGMZA.GoogleGeocoder=function(){},WPGMZA.GoogleGeocoder.prototype=Object.create(WPGMZA.Geocoder.prototype),WPGMZA.GoogleGeocoder.prototype.constructor=WPGMZA.GoogleGeocoder,WPGMZA.GoogleGeocoder.prototype.getLatLngFromAddress=function(options,callback){if(!options||!options.address)throw new Error("No address specified");if(WPGMZA.isLatLngString(options.address))return WPGMZA.Geocoder.prototype.getLatLngFromAddress.call(this,options,callback);options.country&&(options.componentRestrictions={country:options.country}),(new google.maps.Geocoder).geocode(options,function(results,status){if(status==google.maps.GeocoderStatus.OK){var location=results[0].geometry.location;latLng={lat:location.lat(),lng:location.lng()},callback(latLng)}else callback(null)})},function($){var Parent;WPGMZA.GoogleInfoWindow=function(mapObject){Parent.call(this,mapObject),mapObject instanceof WPGMZA.Marker?this.googleObject=mapObject.googleMarker:mapObject instanceof WPGMZA.Polygon?this.googleObject=mapObject.googlePolygon:mapObject instanceof WPGMZA.Polyline&&(this.googleObject=mapObject.googlePolyline)},Parent=WPGMZA.isProVersion()?WPGMZA.ProInfoWindow:WPGMZA.InfoWindow,WPGMZA.GoogleInfoWindow.prototype=Object.create(Parent.prototype),WPGMZA.GoogleInfoWindow.prototype.constructor=WPGMZA.GoogleInfoWindow,WPGMZA.GoogleInfoWindow.prototype.open=function(){var self=this;return!!Parent.prototype.open.call(this)&&(this.googleInfoWindow||(this.googleInfoWindow=new google.maps.InfoWindow),this.googleInfoWindow.open(this.mapObject.map.googleMap,this.googleObject),this.getContent(function(html){var div,intervalID,guid=WPGMZA.guid(),html="<div id='"+guid+"'>"+html+"</div>";self.googleInfoWindow.setContent(html),self.googleInfoWindow.open(self.mapObject.map.googleMap,self.googleObject),intervalID=setInterval(function(event){(div=$("#"+guid)).find(".gm-style-iw").length&&(div[0].wpgmzaMapObject=self.mapObject,self.dispatchEvent("infowindowopen"),div.trigger("infowindowopen"),clearInterval(intervalID))},50)}),!0)},WPGMZA.GoogleInfoWindow.prototype.close=function(){this.googleInfoWindow&&(WPGMZA.InfoWindow.prototype.close.call(this),this.googleInfoWindow.close())}}(jQuery),function($){var Parent;WPGMZA.GoogleMapEditPage=function(){var self=this;Parent.call(this),this.rightClickCursor.googleMarker.setOptions({icon:{url:$("[data-right-click-marker-image]").attr("data-right-click-marker-image")},draggable:!0}),google.maps.event.addListener(this.rightClickCursor.googleMarker,"dragend",function(event){var wpgmzaEvent=new WPGMZA.Event({type:"dragend",latLng:{lat:event.latLng.lat(),lng:event.latLng.lng()}});self.rightClickCursor.dispatchEvent(wpgmzaEvent)})},Parent=WPGMZA.isProVersion()?WPGMZA.ProMapEditPage:WPGMZA.MapEditPage,WPGMZA.GoogleMapEditPage.prototype=Object.create(Parent.prototype),WPGMZA.GoogleMapEditPage.prototype.constructor=WPGMZA.GoogleMapEditPage,WPGMZA.GoogleMapEditPage.prototype.createVertexContextMenuInstance=function(){return new WPGMZA.GoogleVertexContextMenu(this)},WPGMZA.GoogleMapEditPage.prototype.onRightClickMap=function(event){Parent.prototype.onRightClickMap.call(this,event),this.rightClickCursor.googleMarker.setMap(this.map.googleMap)},WPGMZA.GoogleMapEditPage.prototype.editMarker=function(marker){this.rightClickCursor.googleMarker.setMap(null),Parent.prototype.editMarker.call(this,marker)},WPGMZA.GoogleMapEditPage.prototype.onPolygonAdded=function(event){Parent.prototype.onPolygonAdded.call(this,event);var self=this,polygon=event.polygon;polygon.rightClickListener=google.maps.event.addListener(polygon.googlePolygon,"rightclick",function(e){self.vertexContextMenu.open(self.map.googleMap,polygon.googlePolygon.getPath(),e.vertex)}),polygon.googlePolygon.getPaths().forEach(function(path,index){google.maps.event.addListener(path,"insert_at",function(event){self.onPolygonModified(event)}),google.maps.event.addListener(path,"remove_at",function(event){self.onPolygonModified(event)}),google.maps.event.addListener(path,"set_at",function(event){self.onPolygonModified(event)})})},WPGMZA.GoogleMapEditPage.prototype.onPolygonRemoved=function(event){Parent.prototype.onPolygonRemoved.call(this,event),google.maps.event.removeListener(event.polygon.rightClickListener),delete event.polygon.rightClickListener},WPGMZA.GoogleMapEditPage.prototype.onPolygonSettingChanged=function(event){if(this.editMapObjectTarget instanceof WPGMZA.Polygon){Parent.prototype.onPolygonSettingChanged.call(this,event);var name=this.getInputNameWithoutPrefix(event.target.name),value=this.getFieldValue(event.target),options={};options[name]=value,this.editMapObjectTarget.googlePolygon.setOptions(options)}},WPGMZA.GoogleMapEditPage.prototype.onPolylineAdded=function(event){Parent.prototype.onPolylineAdded.call(this,event);var self=this,polyline=event.polyline;polyline.rightClickListener=google.maps.event.addListener(polyline.googlePolyline,"rightclick",function(e){self.vertexContextMenu.open(self.map.googleMap,polyline.googlePolyline.getPath(),e.vertex)});var path=polyline.googlePolyline.getPath();google.maps.event.addListener(path,"insert_at",function(event){self.onPolylineModified(event)}),google.maps.event.addListener(path,"remove_at",function(event){self.onPolylineModified(event)}),google.maps.event.addListener(path,"set_at",function(event){self.onPolylineModified(event)})},WPGMZA.GoogleMapEditPage.prototype.onPolylineSettingChanged=function(event){if(this.editMapObjectTarget instanceof WPGMZA.Polyline){Parent.prototype.onPolylineSettingChanged.call(this,event);var name=this.getInputNameWithoutPrefix(event.target.name),value=this.getFieldValue(event.target),options={};options[name]=value,this.editMapObjectTarget.googlePolyline.setOptions(options)}},WPGMZA.GoogleMapEditPage.prototype.onPolylineRemoved=function(event){Parent.prototype.onPolylineRemoved.call(this,event),google.maps.event.removeListener(polyline.rightClickListener)},WPGMZA.GoogleMapEditPage.prototype.applyThemeData=function(){var str=$("textarea[name='theme_data']").val();try{var json=JSON.parse(str)}catch(e){return void alert(e.message)}var data=$.extend(json,{name:"Styled Map"}),styledMapType=new google.maps.StyledMapType(data);this.map.googleMap.mapTypes.set("styled_map",styledMapType),this.map.googleMap.setMapTypeId("styled_map"),this.map.showPointsOfInterest($("input[name='show_points_of_interest]").prop("checked"))}}(jQuery),function($){var Parent;WPGMZA.GoogleMap=function(element){var self=this;if(!window.google)throw new Error("Google API not loaded");Parent.call(this,element),this.loadGoogleMap(),google.maps.event.addListener(this.googleMap,"click",function(event){self.dispatchEvent("click")}),google.maps.event.addListener(this.googleMap,"rightclick",function(event){var wpgmzaEvent=new WPGMZA.Event("rightclick");wpgmzaEvent.latLng={lat:event.latLng.lat(),lng:event.latLng.lng()},self.dispatchEvent(wpgmzaEvent)}),google.maps.event.addListener(this.googleMap,"dragend",function(event){self.dispatchEvent("dragend")}),google.maps.event.addListener(this.googleMap,"zoom_changed",function(event){self.dispatchEvent("zoomchanged")});var marker;this.storeLocator&&(marker=this.storeLocator.centerPointMarker)&&(this.storeLocator.centerPointMarker.googleMarker.setMap(this.googleMap),marker.setVisible(!1)),$(this.engineElement).append($(this.element).find(".wpgmza-in-map-grid")),google.maps.event.addListener(this.googleMap,"idle",function(event){self.onIdle(event)}),WPGMZA.isProVersion()||(this.dispatchEvent("created"),WPGMZA.events.dispatchEvent({type:"mapcreated",map:this}))},WPGMZA.isProVersion()?(Parent=WPGMZA.ProMap,WPGMZA.GoogleMap.prototype=Object.create(WPGMZA.ProMap.prototype)):(Parent=WPGMZA.Map,WPGMZA.GoogleMap.prototype=Object.create(WPGMZA.Map.prototype)),WPGMZA.GoogleMap.prototype.constructor=WPGMZA.GoogleMap,WPGMZA.GoogleMap.prototype.loadGoogleMap=function(){var self=this,options=this.settings.toGoogleMapsOptions();this.googleMap=new google.maps.Map(this.engineElement,options),google.maps.event.addListener(this.googleMap,"bounds_changed",function(){self.onBoundsChanged()}),this.settings.bicycle&&this.enableBicycleLayer(!0),this.settings.traffic&&this.enableTrafficLayer(!0),this.settings.transport&&this.enablePublicTransportLayer(!0),this.showPointsOfInterest(this.settings.show_points_of_interest),$(this.engineElement).append($(this.element).find(".wpgmza-loader")),window.MYMAP||(window.MYMAP=[]),MYMAP[this.id]={map:this.googleMap}},WPGMZA.GoogleMap.prototype.addMarker=function(marker){marker.googleMarker.setMap(this.googleMap),Parent.prototype.addMarker.call(this,marker),window.marker_array||(window.marker_array=[]),marker_array[this.id]||(marker_array[this.id]=[]),marker_array[this.id][marker.id]=marker.googleMarker},WPGMZA.GoogleMap.prototype.deleteMarker=function(marker){marker.googleMarker.setMap(null),Parent.prototype.deleteMarker.call(this,marker)},WPGMZA.GoogleMap.prototype.addPolygon=function(polygon){polygon.googlePolygon.setMap(this.googleMap),Parent.prototype.addPolygon.call(this,polygon)},WPGMZA.GoogleMap.prototype.deletePolygon=function(polygon){polygon.googlePolygon.setMap(null),Parent.prototype.deletePolygon.call(this,polygon)},WPGMZA.GoogleMap.prototype.addPolyline=function(polyline){polyline.googlePolyline.setMap(this.googleMap),Parent.prototype.addPolyline.call(this,polyline)},WPGMZA.GoogleMap.prototype.deletePolyline=function(polyline){polyline.googlePolyline.setMap(null),Parent.prototype.deletePolyline.call(this,polyline)},WPGMZA.GoogleMap.prototype.getCenter=function(){var latLng=this.googleMap.getCenter();return{lat:latLng.lat(),lng:latLng.lng()}},WPGMZA.GoogleMap.prototype.setCenter=function(latLng){WPGMZA.Map.prototype.setCenter.call(this,latLng),this.googleMap.setCenter(latLng)},WPGMZA.GoogleMap.prototype.panTo=function(latLng){this.googleMap.panTo(latLng)},WPGMZA.GoogleMap.prototype.getZoom=function(){return this.googleMap.getZoom()},WPGMZA.GoogleMap.prototype.setZoom=function(value){return this.googleMap.setZoom(value)},WPGMZA.GoogleMap.prototype.getBounds=function(){var bounds=this.googleMap.getBounds(),northEast=bounds.getNorthEast(),southWest=bounds.getSouthWest();return{topLeft:{lat:northEast.lat(),lng:southWest.lng()},bottomRight:{lat:southWest.lat(),lng:northEast.lng()}}},WPGMZA.GoogleMap.prototype.fitBounds=function(southWest,northEast){this.googleMap.fitBounds(southWest,northEast)},WPGMZA.GoogleMap.prototype.fitBoundsToVisibleMarkers=function(){for(var bounds=new google.maps.LatLngBounds,i=0;i<this.markers.length;i++)markers[i].getVisible()&&bounds.extend(markers[i].getPosition());this.googleMap.fitBounds(bounds)},WPGMZA.GoogleMap.prototype.getFetchParameters=function(){var data=Parent.prototype.getFetchParameters.call(this);return data.bounds=this.googleMap.getBounds().toUrlValue(7),data},WPGMZA.GoogleMap.prototype.enableBicycleLayer=function(enable){this.bicycleLayer||(this.bicycleLayer=new google.maps.BicyclingLayer),this.bicycleLayer.setMap(enable?this.googleMap:null)},WPGMZA.GoogleMap.prototype.enableTrafficLayer=function(enable){this.trafficLayer||(this.trafficLayer=new google.maps.TrafficLayer),this.trafficLayer.setMap(enable?this.googleMap:null)},WPGMZA.GoogleMap.prototype.enablePublicTransportLayer=function(enable){this.publicTransportLayer||(this.publicTransportLayer=new google.maps.TransitLayer),this.publicTransportLayer.setMap(enable?this.googleMap:null)},WPGMZA.GoogleMap.prototype.showPointsOfInterest=function(show){var text=$("textarea[name='theme_data']").val();if(text){var styles=JSON.parse(text);styles.push({featureType:"poi",stylers:[{visibility:show?"on":"off"}]}),this.googleMap.setOptions({styles:styles})}},WPGMZA.GoogleMap.prototype.getMinZoom=function(){return parseInt(this.settings.min_zoom)},WPGMZA.GoogleMap.prototype.setMinZoom=function(value){this.googleMap.setOptions({minZoom:value,maxZoom:this.getMaxZoom()})},WPGMZA.GoogleMap.prototype.getMaxZoom=function(){return parseInt(this.settings.max_zoom)},WPGMZA.GoogleMap.prototype.setMaxZoom=function(value){this.googleMap.setOptions({minZoom:this.getMinZoom(),maxZoom:value})},WPGMZA.GoogleMap.prototype.latLngToPixels=function(latLng){var map=this.googleMap,nativeLatLng=new google.maps.LatLng({lat:latLng.lat,lng:latLng.lng}),topRight=map.getProjection().fromLatLngToPoint(map.getBounds().getNorthEast()),bottomLeft=map.getProjection().fromLatLngToPoint(map.getBounds().getSouthWest()),scale=Math.pow(2,map.getZoom()),worldPoint=map.getProjection().fromLatLngToPoint(nativeLatLng);return{x:(worldPoint.x-bottomLeft.x)*scale,y:(worldPoint.y-topRight.y)*scale}},WPGMZA.GoogleMap.prototype.pixelsToLatLng=function(x,y){void 0==y&&("x"in x&&"y"in x?(y=x.y,x=x.x):console.warn("Y coordinate undefined in pixelsToLatLng (did you mean to pass 2 arguments?)"));var map=this.googleMap,topRight=map.getProjection().fromLatLngToPoint(map.getBounds().getNorthEast()),bottomLeft=map.getProjection().fromLatLngToPoint(map.getBounds().getSouthWest()),scale=Math.pow(2,map.getZoom()),worldPoint=new google.maps.Point(x/scale+bottomLeft.x,y/scale+topRight.y),latLng=map.getProjection().fromPointToLatLng(worldPoint);return{lat:latLng.lat(),lng:latLng.lng()}},WPGMZA.GoogleMap.prototype.onElementResized=function(event){this.googleMap&&google.maps.event.trigger(this.googleMap,"resize")}}(jQuery),function($){var Parent;WPGMZA.GoogleMarker=function(row){var self=this;Parent.call(this,row),this.googleMarker=new google.maps.Marker,this.googleMarker.wpgmzaMarker=this,this.googleMarker.setPosition(new google.maps.LatLng({lat:parseFloat(this.lat),lng:parseFloat(this.lng)})),this.googleMarker.setLabel(this.settings.label),this.googleMarker.setAnimation(this.settings.animation),google.maps.event.addListener(this.googleMarker,"click",function(){self.dispatchEvent("click"),self.dispatchEvent("select")}),google.maps.event.addListener(this.googleMarker,"mouseover",function(){self.dispatchEvent("mouseover")}),google.maps.event.addListener(this.googleMarker,"dragend",function(){var googleMarkerPosition=self.googleMarker.getPosition();self.setPosition({lat:googleMarkerPosition.lat(),lng:googleMarkerPosition.lng()}),self.dispatchEvent("dragend")})},Parent=WPGMZA.isProVersion()?WPGMZA.ProMarker:WPGMZA.Marker,WPGMZA.GoogleMarker.prototype=Object.create(Parent.prototype),WPGMZA.GoogleMarker.prototype.constructor=WPGMZA.GoogleMarker,WPGMZA.GoogleMarker.prototype.setLabel=function(label){label?(this.googleMarker.setLabel({text:label}),this.googleMarker.getIcon()||this.googleMarker.setIcon(WPGMZA.settings.default_marker_icon)):this.googleMarker.setLabel(null)},WPGMZA.GoogleMarker.prototype.setPosition=function(latLng){Parent.prototype.setPosition.call(this,latLng),this.googleMarker.setPosition({lat:this.lat,lng:this.lng})},WPGMZA.GoogleMarker.prototype.setOffset=function(x,y){var params,self=this,icon=this.googleMarker.getIcon(),img=new Image;params="string"==typeof icon?{url:icon}:icon,img.onload=function(){var defaultAnchor={x:img.width/2,y:img.height};params.anchor=new google.maps.Point(defaultAnchor.x-x,defaultAnchor.y-y),self.googleMarker.setIcon(params)},img.src=params.url},WPGMZA.GoogleMarker.prototype.setAnimation=function(animation){Parent.prototype.setAnimation.call(this,animation),this.googleMarker.setAnimation(animation)},WPGMZA.GoogleMarker.prototype.setVisible=function(visible){Parent.prototype.setVisible.call(this,visible),this.googleMarker.setVisible(visible)},WPGMZA.GoogleMarker.prototype.setDraggable=function(draggable){this.googleMarker.setDraggable(draggable)}}(jQuery),function($){var Parent;WPGMZA.GooglePolygon=function(row,googlePolygon){var self=this;if(Parent.call(this,row,googlePolygon),googlePolygon)this.googlePolygon=googlePolygon;else if(this.googlePolygon=new google.maps.Polygon(this.settings),row&&row.points){var paths=this.parseGeometry(row.points);this.googlePolygon.setOptions({paths:paths})}this.googlePolygon.wpgmzaPolygon=this,google.maps.event.addListener(this.googlePolygon,"click",function(){self.dispatchEvent({type:"click"})})},Parent=WPGMZA.isProVersion()?WPGMZA.ProPolygon:WPGMZA.Polygon,WPGMZA.GooglePolygon.prototype=Object.create(Parent.prototype),WPGMZA.GooglePolygon.prototype.constructor=WPGMZA.GooglePolygon,WPGMZA.GooglePolygon.prototype.getEditable=function(){return this.googlePolygon.getOptions().editable},WPGMZA.GooglePolygon.prototype.setEditable=function(value){this.googlePolygon.setOptions({editable:value})},WPGMZA.GooglePolygon.prototype.toJSON=function(){var result=WPGMZA.Polygon.prototype.toJSON.call(this);result.points=[];for(var path=this.googlePolygon.getPath(),i=0;i<path.getLength();i++){var latLng=path.getAt(i);result.points.push({lat:latLng.lat(),lng:latLng.lng()})}return result}}(jQuery),jQuery,WPGMZA.GooglePolyline=function(row,googlePolyline){var self=this;if(WPGMZA.Polyline.call(this,row,googlePolyline),googlePolyline)this.googlePolyline=googlePolyline;else if(this.googlePolyline=new google.maps.Polyline(this.settings),this.googlePolyline.wpgmzaPolyline=this,row&&row.points){var path=this.parseGeometry(row.points);this.setPoints(path)}google.maps.event.addListener(this.googlePolyline,"click",function(){self.dispatchEvent({type:"click"})})},WPGMZA.GooglePolyline.prototype=Object.create(WPGMZA.Polyline.prototype),WPGMZA.GooglePolyline.prototype.constructor=WPGMZA.GooglePolyline,WPGMZA.GooglePolyline.prototype.setEditable=function(value){this.googlePolyline.setOptions({editable:value})},WPGMZA.GooglePolyline.prototype.setPoints=function(points){this.googlePolyline.setOptions({path:points})},WPGMZA.GooglePolyline.prototype.toJSON=function(){var result=WPGMZA.Polyline.prototype.toJSON.call(this);result.points=[];for(var path=this.googlePolyline.getPath(),i=0;i<path.getLength();i++){var latLng=path.getAt(i);result.points.push({lat:latLng.lat(),lng:latLng.lng()})}return result},function($){var Parent;WPGMZA.GoogleStoreLocator=function(map){Parent.call(this,map)},Parent=WPGMZA.isProVersion()?WPGMZA.ProStoreLocator:WPGMZA.StoreLocator,WPGMZA.GoogleStoreLocator.prototype=Object.create(Parent.prototype),WPGMZA.GoogleStoreLocator.prototype.constructor=WPGMZA.GoogleStoreLocator,WPGMZA.GoogleStoreLocator.prototype.showCircle=function(latLng){this.circle||(this.circle=new google.maps.Circle({strokeColor:"#ff0000",strokeCopacity:.25,strokeWeight:2,fillColor:"#ff0000",clickable:!1})),latLng?this.circle.setOptions({center:latLng,map:this.map.googleMap,radius:WPGMZA.Distance.uiToMeters(this.getRadius())}):this.circle.setMap(null)},WPGMZA.GoogleStoreLocator.prototype.showCenterMarker=function(latLng){WPGMZA.StoreLocator.prototype.showCenterMarker.call(this,latLng),this.centerMarker.googleMarker.setMap(latLng?this.map.googleMap:null)}}(jQuery),jQuery,"google-maps"==WPGMZA.settings.engine&&(WPGMZA.GoogleVertexContextMenu=function(mapEditPage){var self=this;this.mapEditPage=mapEditPage,this.element=document.createElement("div"),this.element.className="wpgmza-vertex-context-menu",this.element.innerHTML="Delete",google.maps.event.addDomListener(this.element,"click",function(event){return self.removeVertex(),event.preventDefault(),event.stopPropagation(),!1})},WPGMZA.GoogleVertexContextMenu.prototype=new google.maps.OverlayView,WPGMZA.GoogleVertexContextMenu.prototype.onAdd=function(){var self=this,map=this.getMap();this.getPanes().floatPane.appendChild(this.element),this.divListener=google.maps.event.addDomListener(map.getDiv(),"mousedown",function(e){e.target!=self.element&&self.close()},!0)},WPGMZA.GoogleVertexContextMenu.prototype.onRemove=function(){google.maps.event.removeListener(this.divListener),this.element.parentNode.removeChild(this.element),this.set("position"),this.set("path"),this.set("vertex")},WPGMZA.GoogleVertexContextMenu.prototype.open=function(map,path,vertex){this.set("position",path.getAt(vertex)),this.set("path",path),this.set("vertex",vertex),this.setMap(map),this.draw()},WPGMZA.GoogleVertexContextMenu.prototype.close=function(){this.setMap(null)},WPGMZA.GoogleVertexContextMenu.prototype.draw=function(){var position=this.get("position"),projection=this.getProjection();if(position&&projection){var point=projection.fromLatLngToDivPixel(position);this.element.style.top=point.y+"px",this.element.style.left=point.x+"px"}},WPGMZA.GoogleVertexContextMenu.prototype.removeVertex=function(){var path=this.get("path"),vertex=this.get("vertex");path&&void 0!=vertex?(path.removeAt(vertex),this.close()):this.close()}),jQuery,WPGMZA.OSMDrawingManager=function(map){WPGMZA.DrawingManager.call(this,map),this.source=new ol.source.Vector({wrapX:!1}),this.layer=new ol.layer.Vector({source:this.source}),this.map.osmMap.addLayer(this.layer)},WPGMZA.OSMDrawingManager.prototype=Object.create(WPGMZA.DrawingManager.prototype),WPGMZA.OSMDrawingManager.prototype.constructor=WPGMZA.OSMDrawingManager,WPGMZA.OSMDrawingManager.prototype.setOptions=function(options){var params={};options.strokeOpacity&&(params.stroke=new ol.style.Stroke({color:WPGMZA.hexOpacityToRGBA(options.strokeColor,options.strokeOpacity)})),options.fillOpacity&&(params.fill=new ol.style.Fill({color:WPGMZA.hexOpacityToRGBA(options.fillColor,options.fillOpacity)})),this.layer.setStyle(new ol.style.Style(params))},WPGMZA.OSMDrawingManager.prototype.setDrawingMode=function(mode){var type,endEventType,self=this;switch(WPGMZA.DrawingManager.prototype.setDrawingMode.call(this,mode),this.interaction&&(this.map.osmMap.removeInteraction(this.interaction),this.interaction=null),mode){case WPGMZA.DrawingManager.MODE_NONE:return;case WPGMZA.DrawingManager.MODE_MARKER:type="Point",endEventType="markerplaced";break;case WPGMZA.DrawingManager.MODE_POLYGON:type="Polygon",endEventType="polygonclosed";break;case WPGMZA.DrawingManager.MODE_POLYLINE:type="LineString",endEventType="polylinecomplete";break;default:throw new Error("Invalid drawing mode")}this.interaction=new ol.interaction.Draw({source:this.source,type:type}),this.interaction.on("drawend",function(event){if(endEventType){var wpgmzaEvent=new WPGMZA.Event(endEventType);switch(mode){case WPGMZA.DrawingManager.MODE_MARKER:var lonLat=ol.proj.toLonLat(event.feature.getGeometry().getCoordinates());wpgmzaEvent.engineMarker=event.feature,wpgmzaEvent.latLng={lat:lonLat[1],lng:lonLat[0]};break;case WPGMZA.DrawingManager.MODE_POLYGON:wpgmzaEvent.enginePolygon=event.feature;break;case WPGMZA.DrawingManager.MODE_POLYLINE:wpgmzaEvent.enginePolyline=event.feature}self.dispatchEvent(wpgmzaEvent)}}),this.map.osmMap.addInteraction(this.interaction)},function($){WPGMZA.OSMGeocoder=function(){},WPGMZA.OSMGeocoder.prototype=Object.create(WPGMZA.Geocoder.prototype),WPGMZA.OSMGeocoder.prototype.constructor=WPGMZA.OSMGeocoder,WPGMZA.OSMGeocoder.prototype.getResponseFromCache=function(address,callback){$.ajax(WPGMZA.ajaxurl,{data:{action:"wpgmza_query_nominatim_cache",query:address},success:function(response,xhr,status){callback(response)}})},WPGMZA.OSMGeocoder.prototype.getResponseFromNominatim=function(options,callback){var data={q:options.address,format:"json"};options.country&&(data.countrycodes=options.country),$.ajax("https://nominatim.openstreetmap.org/search/",{data:data,success:function(response,xhr,status){callback(response)}})},WPGMZA.OSMGeocoder.prototype.cacheResponse=function(address,response){$.ajax(WPGMZA.ajaxurl,{data:{action:"wpgmza_query_nominatim_cache",query:address,response:JSON.stringify(response)},method:"POST"})},WPGMZA.OSMGeocoder.prototype.extractLatLng=function(item){return{lat:parseFloat(item.lat),lng:parseFloat(item.lon)}},WPGMZA.OSMGeocoder.prototype.getLatLngFromAddress=function(options,callback){function finish(response){var latLng=self.extractLatLng(response[0]);callback(latLng)}var self=this,address=options.address;if(WPGMZA.isLatLngString(address))return WPGMZA.Geocoder.prototype.getLatLngFromAddress.call(this,options,callback);this.getResponseFromCache(address,function(response){response.length?finish(response):self.getResponseFromNominatim(options,function(response){0!=response.length?(finish(response),self.cacheResponse(address,response)):callback(null)})})}}(jQuery),function($){var Parent;WPGMZA.OSMInfoWindow=function(mapObject){Parent.call(this,mapObject)},Parent=WPGMZA.isProVersion()?WPGMZA.ProInfoWindow:WPGMZA.InfoWindow,WPGMZA.OSMInfoWindow.prototype=Object.create(Parent.prototype),WPGMZA.OSMInfoWindow.prototype.constructor=WPGMZA.OSMInfoWindow,WPGMZA.OSMInfoWindow.prototype.open=function(event){var self=this;if(!WPGMZA.InfoWindow.prototype.open.call(this,event))return!1;this.getContent(function(html){var latLng=self.mapObject.getPosition();self.element=$("<div class='osm-info-window-container osm-info-window-plain'><i class='fa fa-times osm-info-window-close' aria-hidden='true'></i>"+html+"</div>")[0],$(self.element).find(".osm-info-window-close").on("click",function(event){self.mapObject.map.osmMap.removeOverlay(self.overlay),self.overlay=null}),self.overlay&&self.mapObject.map.osmMap.removeOverlay(self.overlay),self.overlay=new ol.Overlay({element:self.element}),self.overlay.setPosition(ol.proj.fromLonLat([latLng.lng,latLng.lat])),self.mapObject.map.osmMap.addOverlay(self.overlay),self.dispatchEvent("infowindowopen"),$(self.element).trigger("infowindowopen")})},WPGMZA.OSMInfoWindow.prototype.close=function(event){self.overlay&&(WPGMZA.InfoWindow.prototype.close.call(this),self.mapObject.map.osmMap.removeOverlay(self.overlay))}}(jQuery),function($){var Parent;WPGMZA.OSMMapEditPage=function(){var self=this;Parent.call(this),this.map.osmMap.updateSize(),this.selectInteraction=new ol.interaction.Select,this.selectInteraction.on("select",function(event){if(!(self.editMapObjectTarget instanceof WPGMZA.Heatmap||self.drawingManager.mode!=WPGMZA.DrawingManager.MODE_NONE)){self.finishEditingMapObject(!1);for(var features=event.target.getFeatures().getArray(),i=0;i<features.length;i++){var properties=features[i].getProperties();for(var name in properties)if(properties[name]instanceof WPGMZA.MapObject)return properties[name].dispatchEvent("click"),void self.modifyInteraction.setActive(!0)}}}),this.map.osmMap.addInteraction(this.selectInteraction),this.modifyInteraction=new ol.interaction.Modify({features:this.selectInteraction.getFeatures(),deleteCondition:function(event){return ol.events.condition.shiftKeyOnly(event)&&ol.events.condition.singleClick(event)}}),this.modifyInteraction.on("modifyend",function(event){self.editMapObjectTarget.modified=!0}),this.modifyInteraction.setActive(!1),this.map.osmMap.addInteraction(this.modifyInteraction),$(this.rightClickCursor.element).find("img")[0].src=$(".wpgmza-map").attr("data-right-click-marker-image"),this.map.osmMap.addOverlay(this.rightClickCursor.overlay),$(".wpgmza-engine-map").on("mousemove",function(event){var offset=$(this).offset(),x=event.pageX-offset.left,y=event.pageY-offset.top;self.mouseCoordinates={x:x,y:y}}),$(".wpgmza-engine-map").bind("contextmenu",function(event){return self.onRightClick(event)})},Parent=WPGMZA.isProVersion()?WPGMZA.ProMapEditPage:WPGMZA.MapEditPage,WPGMZA.OSMMapEditPage.prototype=Object.create(Parent.prototype),WPGMZA.OSMMapEditPage.prototype.constructor=WPGMZA.OSMMapEditPage,WPGMZA.OSMMapEditPage.prototype.onRightClick=function(event){if($(event.target).closest("[data-wpgmza-layout-element]:not(.wpgmza-engine-map)").length)return!0;var conversion=this.map.osmMap.getCoordinateFromPixel([this.mouseCoordinates.x,this.mouseCoordinates.y]),coordinates=ol.proj.toLonLat([conversion[0],conversion[1]]);return this.map.dispatchEvent({type:"rightclick",latLng:{lat:coordinates[1],lng:coordinates[0]}}),!1},WPGMZA.OSMMapEditPage.prototype.onPolygonSettingChanged=function(event){this.editMapObjectTarget instanceof WPGMZA.Polygon&&(Parent.prototype.onPolygonSettingChanged.call(this,event),this.editMapObjectTarget.updateStyleFromSettings())},WPGMZA.OSMMapEditPage.prototype.onFinishEditingPolygon=function(event){this.selectInteraction.getFeatures().clear()},WPGMZA.OSMMapEditPage.prototype.onPolylineSettingChanged=function(event){this.editMapObjectTarget instanceof WPGMZA.Polyline&&(Parent.prototype.onPolylineSettingChanged.call(this,event),this.editMapObjectTarget.updateStyleFromSettings())},WPGMZA.OSMMapEditPage.prototype.finishEditingMapObject=function(clearSelectInteraction){Parent.prototype.finishEditingMapObject.call(this),this.modifyInteraction.setActive(!1),void 0!==clearSelectInteraction&&1!=clearSelectInteraction||WPGMZA.mapEditPage.selectInteraction.getFeatures().clear()}}(jQuery),function($){var Parent;WPGMZA.OSMMap=function(element){var self=this;Parent.call(this,element);var viewOptions=this.settings.toOSMViewOptions();this.osmMap=new ol.Map({target:$(element).find(".wpgmza-engine-map")[0],layers:[new ol.layer.Tile({source:new ol.source.OSM})],view:new ol.View(viewOptions)}),$(this.engineElement).append($(this.element).find(".wpgmza-in-map-grid")),this.osmMap.getInteractions().forEach(function(interaction){interaction instanceof ol.interaction.DragPan?interaction.setActive(!this.settings.map_draggable):interaction instanceof ol.interaction.DoubleClickZoom?interaction.setActive(!this.settings.map_clickzoom):interaction instanceof ol.interaction.MouseWheelZoom&&interaction.setActive(!this.settings.map_scroll)},this),this.osmMap.getControls().forEach(function(control){control instanceof ol.control.Zoom&&this.settings.map_zoom&&this.osmMap.removeControl(control)},this),this.settings.map_full_screen_control||this.osmMap.addControl(new ol.control.FullScreen),this.markerLayer=new ol.layer.Vector({source:new ol.source.Vector({features:[]})}),this.osmMap.addLayer(this.markerLayer),this.osmMap.on("moveend",function(event){self.wrapLongitude(),self.dispatchEvent("dragend"),self.onIdle()}),this.osmMap.getView().on("change:resolution",function(event){self.dispatchEvent("zoomchanged"),self.onIdle()}),this.osmMap.getView().on("change",function(){self.onBoundsChanged()}),self.onBoundsChanged();var marker;this.storeLocator&&(marker=this.storeLocator.centerPointMarker)&&(this.osmMap.addOverlay(marker.overlay),marker.setVisible(!1)),WPGMZA.isProVersion()||(this.dispatchEvent("created"),WPGMZA.events.dispatchEvent({type:"mapcreated",map:this}))},Parent=WPGMZA.isProVersion()?WPGMZA.ProMap:WPGMZA.Map,WPGMZA.OSMMap.prototype=Object.create(Parent.prototype),WPGMZA.OSMMap.prototype.constructor=WPGMZA.OSMMap,WPGMZA.OSMMap.prototype.wrapLongitude=function(){var center=this.getCenter();center.lng>=-180&&center.lng<=180||(center.lng=center.lng-360*Math.floor(center.lng/360),center.lng>180&&(center.lng-=360),this.setCenter(center))},WPGMZA.OSMMap.prototype.getCenter=function(){var lonLat=ol.proj.toLonLat(this.osmMap.getView().getCenter());return{lat:lonLat[1],lng:lonLat[0]}},WPGMZA.OSMMap.prototype.setCenter=function(latLng){var view=this.osmMap.getView();WPGMZA.Map.prototype.setCenter.call(this,latLng),view.setCenter(ol.proj.fromLonLat([latLng.lng,latLng.lat])),this.wrapLongitude(),this.onBoundsChanged()},WPGMZA.OSMMap.prototype.getBounds=function(){var bounds=this.osmMap.getView().calculateExtent(this.osmMap.getSize()),topLeft=ol.proj.toLonLat([bounds[0],bounds[1]]),bottomRight=ol.proj.toLonLat([bounds[2],bounds[3]]);return{topLeft:{lat:topLeft[1],lng:topLeft[0]},bottomRight:{lat:bottomRight[1],lng:bottomRight[0]}}},WPGMZA.OSMMap.prototype.fitBounds=function(southWest,northEast){this.osmMap.getView().fitExtent([southWest.lng,southWest.lat,northEast.lng,northEast.lat],this.osmMap.getSize())},WPGMZA.OSMMap.prototype.panTo=function(latLng){this.osmMap.getView().animate({center:ol.proj.fromLonLat([parseFloat(latLng.lng),parseFloat(latLng.lat)]),duration:500})},WPGMZA.OSMMap.prototype.getZoom=function(){return this.osmMap.getView().getZoom()},WPGMZA.OSMMap.prototype.setZoom=function(value){this.osmMap.getView().setZoom(value)},WPGMZA.OSMMap.prototype.getMinZoom=function(){return this.osmMap.getView().getMinZoom()},WPGMZA.OSMMap.prototype.setMinZoom=function(value){this.osmMap.getView().setMinZoom(value)},WPGMZA.OSMMap.prototype.getMaxZoom=function(){return this.osmMap.getView().getMaxZoom()},WPGMZA.OSMMap.prototype.setMaxZoom=function(value){this.osmMap.getView().setMaxZoom(value)},WPGMZA.OSMMap.prototype.addMarker=function(marker){this.osmMap.addOverlay(marker.overlay),Parent.prototype.addMarker.call(this,marker)},WPGMZA.OSMMap.prototype.deleteMarker=function(marker){this.osmMap.removeOverlay(marker.overlay),Parent.prototype.deleteMarker.call(this,marker)},WPGMZA.OSMMap.prototype.addPolygon=function(polygon){this.osmMap.addLayer(polygon.layer),Parent.prototype.addPolygon.call(this,polygon)},WPGMZA.OSMMap.prototype.deletePolygon=function(polygon){this.osmMap.removeLayer(polygon.layer),Parent.prototype.deletePolygon.call(this,polygon)},WPGMZA.OSMMap.prototype.addPolyline=function(polyline){this.osmMap.addLayer(polyline.layer),Parent.prototype.addPolyline.call(this,polyline)},WPGMZA.OSMMap.prototype.deletePolyline=function(polyline){this.osmMap.removeLayer(polyline.layer),Parent.prototype.deletePolyline.call(this,polyline)},WPGMZA.OSMMap.prototype.getFetchParameters=function(){var result=WPGMZA.Map.prototype.getFetchParameters.call(this),bounds=this.osmMap.getView().calculateExtent(this.osmMap.getSize()),topLeft=ol.proj.toLonLat([bounds[0],bounds[1]]),bottomRight=ol.proj.toLonLat([bounds[2],bounds[3]]);return result.bounds=topLeft[1]+","+topLeft[0]+","+bottomRight[1]+","+bottomRight[0],result},WPGMZA.OSMMap.prototype.pixelsToLatLng=function(x,y){void 0==y&&("x"in x&&"y"in x?(y=x.y,x=x.x):console.warn("Y coordinate undefined in pixelsToLatLng (did you mean to pass 2 arguments?)"));var coord=this.osmMap.getCoordinateFromPixel([x,y]);if(!coord)return{x:null,y:null};var lonLat=ol.proj.toLonLat(coord);return{lat:lonLat[1],lng:lonLat[0]}},WPGMZA.OSMMap.prototype.latLngToPixels=function(latLng){var coord=ol.proj.fromLonLat([latLng.lng,latLng.lat]),pixel=this.osmMap.getPixelFromCoordinate(coord);return pixel?{x:pixel[0],y:pixel[1]}:{x:null,y:null}},WPGMZA.OSMMap.prototype.enableBicycleLayer=function(value){if(value)this.bicycleLayer||(this.bicycleLayer=new ol.layer.Tile({source:new ol.source.OSM({url:"http://{a-c}.tile.opencyclemap.org/cycle/{z}/{x}/{y}.png"})})),this.osmMap.addLayer(this.bicycleLayer);else{if(!this.bicycleLayer)return;this.osmMap.removeLayer(this.bicycleLayer)}},WPGMZA.OSMMap.prototype.onElementResized=function(event){this.osmMap.updateSize()}}(jQuery),function($){var Parent;WPGMZA.OSMMarker=function(row){var self=this;Parent.call(this,row);var origin=ol.proj.fromLonLat([parseFloat(this.lng),parseFloat(this.lat)]);this.element=$("<div class='osm-marker'><img src='"+WPGMZA.settings.default_marker_icon+"'/></div>")[0],$(this.element).on("click",function(event){self.dispatchEvent("click"),self.dispatchEvent("select")}),$(this.element).on("mouseover",function(event){self.dispatchEvent("mouseover")}),this.overlay=new ol.Overlay({element:this.element}),this.overlay.setPosition(origin),this.setAnimation(this.settings.animation),this.setLabel(this.settings.label)},Parent=WPGMZA.isProVersion()?WPGMZA.ProMarker:WPGMZA.Marker,WPGMZA.OSMMarker.prototype=Object.create(Parent.prototype),WPGMZA.OSMMarker.prototype.constructor=WPGMZA.OSMMarker,WPGMZA.OSMMarker.prototype.addLabel=function(){this.setLabel(this.getLabelText())},WPGMZA.OSMMarker.prototype.setLabel=function(label){label?(this.label||(this.label=$("<div class='osm-marker-label'/>"),$(this.element).append(this.label)),this.label.html(label)):this.label&&$(this.element).find(".osm-marker-label").remove()},WPGMZA.OSMMarker.prototype.setVisible=function(visible){Parent.prototype.setVisible(visible),this.overlay.getElement().style.display=visible?"block":"none"},WPGMZA.OSMMarker.prototype.setPosition=function(latLng){Parent.prototype.setPosition.call(this,latLng);var origin=ol.proj.fromLonLat([parseFloat(this.lng),parseFloat(this.lat)]);this.overlay.setPosition(origin)},WPGMZA.OSMMarker.prototype.setOffset=function(x,y){this.element.style.position="relative",this.element.style.left=x+"px",this.element.style.top=y+"px"},WPGMZA.OSMMarker.prototype.setAnimation=function(anim){switch(Parent.prototype.setAnimation.call(this,anim),anim){case WPGMZA.Marker.ANIMATION_NONE:$(this.element).removeAttr("data-anim");break;case WPGMZA.Marker.ANIMATION_BOUNCE:$(this.element).attr("data-anim","bounce");break;case WPGMZA.Marker.ANIMATION_DROP:$(this.element).attr("data-anim","drop")}}}(jQuery),function($){var Parent;WPGMZA.OSMPolygon=function(row,osmFeature){if(Parent.call(this,row,osmFeature),this.osmStyle=new ol.style.Style,osmFeature)this.osmFeature=osmFeature;else{var coordinates=[[]];if(row&&row.points){for(var paths=this.parseGeometry(row.points),i=0;i<paths.length;i++)coordinates[0].push(ol.proj.fromLonLat([parseFloat(paths[i].lng),parseFloat(paths[i].lat)]));this.osmStyle=new ol.style.Style(this.getStyleFromSettings())}this.osmFeature=new ol.Feature({geometry:new ol.geom.Polygon(coordinates)})}this.layer=new ol.layer.Vector({source:new ol.source.Vector({features:[this.osmFeature]}),style:this.osmStyle}),this.layer.getSource().getFeatures()[0].setProperties({wpgmzaPolygon:this})},Parent=WPGMZA.isProVersion()?WPGMZA.ProPolygon:WPGMZA.Polygon,WPGMZA.OSMPolygon.prototype=Object.create(Parent.prototype),WPGMZA.OSMPolygon.prototype.constructor=WPGMZA.OSMPolygon,WPGMZA.OSMPolygon.prototype.getStyleFromSettings=function(){var params={};return this.settings.strokeOpacity&&(params.stroke=new ol.style.Stroke({color:WPGMZA.hexOpacityToRGBA(this.settings.strokeColor,this.settings.strokeOpacity)})),this.settings.fillOpacity&&(params.fill=new ol.style.Fill({color:WPGMZA.hexOpacityToRGBA(this.settings.fillColor,this.settings.fillOpacity)})),params},WPGMZA.OSMPolygon.prototype.updateStyleFromSettings=function(){var params=this.getStyleFromSettings();this.osmStyle=new ol.style.Style(params),this.layer.setStyle(this.osmStyle)},WPGMZA.OSMPolygon.prototype.setEditable=function(editable){},WPGMZA.OSMPolygon.prototype.toJSON=function(){var result=Parent.prototype.toJSON.call(this),coordinates=this.osmFeature.getGeometry().getCoordinates()[0];result.points=[];for(var i=0;i<coordinates.length;i++){var lonLat=ol.proj.toLonLat(coordinates[i]),latLng={lat:lonLat[1],lng:lonLat[0]};result.points.push(latLng)}return result}}(jQuery),function($){var Parent;WPGMZA.OSMPolyline=function(row,osmFeature){if(WPGMZA.Polyline.call(this,row),this.osmStyle=new ol.style.Style,osmFeature)this.osmFeature=osmFeature;else{var coordinates=[];if(row&&row.points)for(var path=this.parseGeometry(row.points),i=0;i<path.length;i++)coordinates.push(ol.proj.fromLonLat([parseFloat(path[i].lng),parseFloat(path[i].lat)]));var params=this.getStyleFromSettings();this.osmStyle=new ol.style.Style(params),this.osmFeature=new ol.Feature({geometry:new ol.geom.LineString(coordinates)})}this.layer=new ol.layer.Vector({source:new ol.source.Vector({features:[this.osmFeature]}),style:this.osmStyle}),this.layer.getSource().getFeatures()[0].setProperties({wpgmzaPolyling:this})},Parent=WPGMZA.Polyline,WPGMZA.OSMPolyline.prototype=Object.create(Parent.prototype),WPGMZA.OSMPolyline.prototype.constructor=WPGMZA.OSMPolyline,WPGMZA.OSMPolyline.prototype.getStyleFromSettings=function(){var params={};return this.settings.strokeOpacity&&(params.stroke=new ol.style.Stroke({color:WPGMZA.hexOpacityToRGBA(this.settings.strokeColor,this.settings.strokeOpacity),width:parseInt(this.settings.strokeWeight)})),params},WPGMZA.OSMPolyline.prototype.updateStyleFromSettings=function(){var params=this.getStyleFromSettings();this.osmStyle=new ol.style.Style(params),this.layer.setStyle(this.osmStyle)},WPGMZA.OSMPolyline.prototype.setEditable=function(editable){},WPGMZA.OSMPolyline.prototype.setPoints=function(points){this.osmFeature&&this.layer.getSource().removeFeature(this.osmFeature);for(var coordinates=[],i=0;i<points.length;i++)coordinates.push(ol.proj.fromLonLat([parseFloat(points[i].lng),parseFloat(points[i].lat)]));this.osmFeature=new ol.Feature({geometry:new ol.geom.LineString(coordinates)}),this.layer.getSource().addFeature(this.osmFeature)},WPGMZA.OSMPolyline.prototype.toJSON=function(){var result=Parent.prototype.toJSON.call(this),coordinates=this.osmFeature.getGeometry().getCoordinates();result.points=[];for(var i=0;i<coordinates.length;i++){var lonLat=ol.proj.toLonLat(coordinates[i]),latLng={lat:lonLat[1],lng:lonLat[0]};result.points.push(latLng)}return result}}(jQuery),function($){var Parent;WPGMZA.OSMStoreLocator=function(map){Parent.call(this,map)},Parent=WPGMZA.isProVersion()?WPGMZA.ProStoreLocator:WPGMZA.StoreLocator,WPGMZA.OSMStoreLocator.prototype=Object.create(Parent.prototype),WPGMZA.OSMStoreLocator.prototype.constructor=WPGMZA.OSMStoreLocator,WPGMZA.OSMStoreLocator.prototype.showCircle=function(latLng){var radius=ol.proj.METERS_PER_UNIT.m*WPGMZA.Distance.uiToMeters(this.getRadius());this.circleLayer&&this.map.osmMap.removeLayer(this.circleLayer),latLng&&(this.circleLayer=new ol.layer.Vector({source:new ol.source.Vector({features:[new ol.Feature({geometry:new ol.geom.Circle(ol.proj.fromLonLat([parseFloat(latLng.lng),parseFloat(latLng.lat)]),radius)})]}),style:new ol.style.Style({stroke:new ol.style.Stroke({color:[255,0,0,1],width:2}),fill:new ol.style.Fill({color:[255,0,0,.25]})})}),this.map.osmMap.addLayer(this.circleLayer))},WPGMZA.OSMStoreLocator.prototype.showCenterMarker=function(latLng){WPGMZA.StoreLocator.prototype.showCenterMarker.call(this,latLng),latLng?this.map.osmMap.addOverlay(this.centerMarker.overlay):this.map.osmMap&&this.map.osmMap.removeOverlay(this.centerMarker.overlay)}}(jQuery);